"""
== SAMB in full matrix form (* only for crystal) ===
- model : model name.
- molecule : molecule or crystal ?
- group : (tag, detailed str)
- dimension : dimension of full matrix
- ket : ket basis list, orbital@site
- version : MultiPie version
- k_point* : representative k points
- k_path* : high-symmetry line in k space
- A* : transform matrix, [a1,a2,a3]
- bond* : { "bond_#": "vector" }
- matrix : { "z_#": "matrix" }
"""
C3v = {
    "model": "C3v",
    "molecule": True,
    "group": ("C3v-1", "point group No. 19 : C3v-1 / 31m (31m)"),
    "dimension": 12,
    "ket": ["s@A_1", "s@A_2", "s@A_3", "px@B_1", "py@B_1", "pz@B_1", "px@B_2", "py@B_2", "pz@B_2", "px@B_3", "py@B_3", "pz@B_3"],
    "version": "1.1.2",
    "matrix": {
        "z_001": "[[sqrt(3)/3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(3)/3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)/3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_002": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1/3, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1/3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1/3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1/3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1/3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1/3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1/3, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1/3, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1/3]]",
        "z_003": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(2)/6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(2)/6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(2)/3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, -sqrt(2)/6, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, -sqrt(2)/6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/3, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(2)/6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(2)/6, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/3]]",
        "z_004": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)/12, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0, 0, 0], [0, 0, 0, 0, 0, 0, -sqrt(6)/12, sqrt(2)/4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)/12], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(2)/4], [0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)/12, -sqrt(2)/4, 0]]",
        "z_005": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, -sqrt(6)/12, -sqrt(2)/4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, -sqrt(2)/4, sqrt(6)/12, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)/12, sqrt(2)/4, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, sqrt(6)/12, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_006": "[[0, sqrt(6)/6, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(6)/6, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(6)/6, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_007": "[[0, 0, 0, 0, 0, sqrt(3)/6, 0, 0, sqrt(3)/6, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/6, 0, 0, sqrt(3)/6], [0, 0, 0, 0, 0, sqrt(3)/6, 0, 0, 0, 0, 0, sqrt(3)/6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)/6, 0, sqrt(3)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)/6, sqrt(3)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(3)/6, sqrt(3)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_008": "[[0, 0, 0, 1/4, -sqrt(3)/12, 0, -1/4, sqrt(3)/12, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(3)/6, 0, 0, -sqrt(3)/6, 0], [0, 0, 0, 1/4, sqrt(3)/12, 0, 0, 0, 0, -1/4, -sqrt(3)/12, 0], [1/4, 0, 1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-sqrt(3)/12, 0, sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)/12, sqrt(3)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(3)/6, -sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_009": "[[0, 0, 0, sqrt(3)/12, 1/4, 0, sqrt(3)/12, 1/4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, -sqrt(3)/6, 0, 0, -sqrt(3)/6, 0, 0], [0, 0, 0, sqrt(3)/12, -1/4, 0, 0, 0, 0, sqrt(3)/12, -1/4, 0], [sqrt(3)/12, 0, sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1/4, 0, -1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)/12, -sqrt(3)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(3)/6, sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
    },
}
