"""
== SAMB in full matrix form in real space (* only for crystal) ===
- model : model name.
- molecule : molecule or crystal ?
- group : (tag, detailed str)
- dimension : dimension of full matrix
- ket : ket basis list, orbital@site
- version : MultiPie version
- k_point* : representative k points
- k_path* : high-symmetry line in k space
- cell_site : { name_idx(pset): (position, SOs) }
- A* : transform matrix, [a1,a2,a3]
- matrix : { "z_#": {(n1, n2, n3, a, b): matrix element} }
"""
SrVO3 = {
    "model": "SrVO3",
    "molecule": False,
    "group": ("Oh^1", "space group No. 221 : Oh^1 / Pm-3m : PG Oh"),
    "dimension": 3,
    "ket": ["dyz@V_1", "dzx@V_1", "dxy@V_1"],
    "cell_site": {
        "V_1": (
            "[0, 0, 0]",
            "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]",
        )
    },
    "version": "1.1.14",
    "k_point": {"R": "[1/2,1/2,1/2]", "Γ": "[0,0,0]", "X": "[1/2,0,0]", "M": "[1/2,1/2,0]"},
    "k_path": "R-Γ-X-R-M-Γ",
    "A": "[[3.8409, 0.0, 0.0], [0.0, 3.8409, 0.0], [0.0, 0.0, 3.8409]]",
    "matrix": {
        "z_001": {(0, 0, 0, 0, 0): "sqrt(3)/3", (0, 0, 0, 1, 1): "sqrt(3)/3", (0, 0, 0, 2, 2): "sqrt(3)/3"},
        "z_002": {
            (0, 0, 1, 0, 0): "sqrt(2)/6",
            (0, 0, -1, 0, 0): "sqrt(2)/6",
            (0, 0, 1, 1, 1): "sqrt(2)/6",
            (0, 0, -1, 1, 1): "sqrt(2)/6",
            (0, 0, 1, 2, 2): "sqrt(2)/6",
            (0, 0, -1, 2, 2): "sqrt(2)/6",
            (1, 0, 0, 0, 0): "sqrt(2)/6",
            (-1, 0, 0, 0, 0): "sqrt(2)/6",
            (1, 0, 0, 1, 1): "sqrt(2)/6",
            (-1, 0, 0, 1, 1): "sqrt(2)/6",
            (1, 0, 0, 2, 2): "sqrt(2)/6",
            (-1, 0, 0, 2, 2): "sqrt(2)/6",
            (0, 1, 0, 0, 0): "sqrt(2)/6",
            (0, -1, 0, 0, 0): "sqrt(2)/6",
            (0, 1, 0, 1, 1): "sqrt(2)/6",
            (0, -1, 0, 1, 1): "sqrt(2)/6",
            (0, 1, 0, 2, 2): "sqrt(2)/6",
            (0, -1, 0, 2, 2): "sqrt(2)/6",
        },
        "z_003": {
            (0, 0, 1, 0, 0): "-1/6",
            (0, 0, -1, 0, 0): "-1/6",
            (0, 0, 1, 1, 1): "-1/6",
            (0, 0, -1, 1, 1): "-1/6",
            (0, 0, 1, 2, 2): "1/3",
            (0, 0, -1, 2, 2): "1/3",
            (1, 0, 0, 0, 0): "1/3",
            (-1, 0, 0, 0, 0): "1/3",
            (1, 0, 0, 1, 1): "-1/6",
            (-1, 0, 0, 1, 1): "-1/6",
            (1, 0, 0, 2, 2): "-1/6",
            (-1, 0, 0, 2, 2): "-1/6",
            (0, 1, 0, 0, 0): "-1/6",
            (0, -1, 0, 0, 0): "-1/6",
            (0, 1, 0, 1, 1): "1/3",
            (0, -1, 0, 1, 1): "1/3",
            (0, 1, 0, 2, 2): "-1/6",
            (0, -1, 0, 2, 2): "-1/6",
        },
        "z_004": {
            (0, 1, 1, 0, 0): "1/6",
            (0, -1, -1, 0, 0): "1/6",
            (0, 1, 1, 1, 1): "1/6",
            (0, -1, -1, 1, 1): "1/6",
            (0, 1, 1, 2, 2): "1/6",
            (0, -1, -1, 2, 2): "1/6",
            (0, 1, -1, 0, 0): "1/6",
            (0, -1, 1, 0, 0): "1/6",
            (0, 1, -1, 1, 1): "1/6",
            (0, -1, 1, 1, 1): "1/6",
            (0, 1, -1, 2, 2): "1/6",
            (0, -1, 1, 2, 2): "1/6",
            (1, 0, -1, 0, 0): "1/6",
            (-1, 0, 1, 0, 0): "1/6",
            (1, 0, -1, 1, 1): "1/6",
            (-1, 0, 1, 1, 1): "1/6",
            (1, 0, -1, 2, 2): "1/6",
            (-1, 0, 1, 2, 2): "1/6",
            (1, -1, 0, 0, 0): "1/6",
            (-1, 1, 0, 0, 0): "1/6",
            (1, -1, 0, 1, 1): "1/6",
            (-1, 1, 0, 1, 1): "1/6",
            (1, -1, 0, 2, 2): "1/6",
            (-1, 1, 0, 2, 2): "1/6",
            (1, 0, 1, 0, 0): "1/6",
            (-1, 0, -1, 0, 0): "1/6",
            (1, 0, 1, 1, 1): "1/6",
            (-1, 0, -1, 1, 1): "1/6",
            (1, 0, 1, 2, 2): "1/6",
            (-1, 0, -1, 2, 2): "1/6",
            (1, 1, 0, 0, 0): "1/6",
            (-1, -1, 0, 0, 0): "1/6",
            (1, 1, 0, 1, 1): "1/6",
            (-1, -1, 0, 1, 1): "1/6",
            (1, 1, 0, 2, 2): "1/6",
            (-1, -1, 0, 2, 2): "1/6",
        },
        "z_005": {
            (0, 1, 1, 0, 0): "-sqrt(5)/15",
            (0, -1, -1, 0, 0): "-sqrt(5)/15",
            (0, 1, 1, 1, 1): "sqrt(5)/30",
            (0, -1, -1, 1, 1): "sqrt(5)/30",
            (0, 1, 1, 2, 2): "sqrt(5)/30",
            (0, -1, -1, 2, 2): "sqrt(5)/30",
            (0, 1, -1, 0, 0): "-sqrt(5)/15",
            (0, -1, 1, 0, 0): "-sqrt(5)/15",
            (0, 1, -1, 1, 1): "sqrt(5)/30",
            (0, -1, 1, 1, 1): "sqrt(5)/30",
            (0, 1, -1, 2, 2): "sqrt(5)/30",
            (0, -1, 1, 2, 2): "sqrt(5)/30",
            (1, 0, -1, 0, 0): "sqrt(5)/30",
            (-1, 0, 1, 0, 0): "sqrt(5)/30",
            (1, 0, -1, 1, 1): "-sqrt(5)/15",
            (-1, 0, 1, 1, 1): "-sqrt(5)/15",
            (1, 0, -1, 2, 2): "sqrt(5)/30",
            (-1, 0, 1, 2, 2): "sqrt(5)/30",
            (1, -1, 0, 0, 0): "sqrt(5)/30",
            (-1, 1, 0, 0, 0): "sqrt(5)/30",
            (1, -1, 0, 1, 1): "sqrt(5)/30",
            (-1, 1, 0, 1, 1): "sqrt(5)/30",
            (1, -1, 0, 2, 2): "-sqrt(5)/15",
            (-1, 1, 0, 2, 2): "-sqrt(5)/15",
            (1, 0, 1, 0, 0): "sqrt(5)/30",
            (-1, 0, -1, 0, 0): "sqrt(5)/30",
            (1, 0, 1, 1, 1): "-sqrt(5)/15",
            (-1, 0, -1, 1, 1): "-sqrt(5)/15",
            (1, 0, 1, 2, 2): "sqrt(5)/30",
            (-1, 0, -1, 2, 2): "sqrt(5)/30",
            (1, 1, 0, 0, 0): "sqrt(5)/30",
            (-1, -1, 0, 0, 0): "sqrt(5)/30",
            (1, 1, 0, 1, 1): "sqrt(5)/30",
            (-1, -1, 0, 1, 1): "sqrt(5)/30",
            (1, 1, 0, 2, 2): "-sqrt(5)/15",
            (-1, -1, 0, 2, 2): "-sqrt(5)/15",
            (0, 1, 1, 1, 2): "sqrt(10)/20",
            (0, -1, -1, 2, 1): "sqrt(10)/20",
            (0, 1, 1, 2, 1): "sqrt(10)/20",
            (0, -1, -1, 1, 2): "sqrt(10)/20",
            (0, 1, -1, 1, 2): "-sqrt(10)/20",
            (0, -1, 1, 2, 1): "-sqrt(10)/20",
            (0, 1, -1, 2, 1): "-sqrt(10)/20",
            (0, -1, 1, 1, 2): "-sqrt(10)/20",
            (1, 0, -1, 0, 2): "-sqrt(10)/20",
            (-1, 0, 1, 2, 0): "-sqrt(10)/20",
            (1, 0, -1, 2, 0): "-sqrt(10)/20",
            (-1, 0, 1, 0, 2): "-sqrt(10)/20",
            (1, 0, 1, 0, 2): "sqrt(10)/20",
            (-1, 0, -1, 2, 0): "sqrt(10)/20",
            (1, 0, 1, 2, 0): "sqrt(10)/20",
            (-1, 0, -1, 0, 2): "sqrt(10)/20",
            (1, -1, 0, 0, 1): "-sqrt(10)/20",
            (-1, 1, 0, 1, 0): "-sqrt(10)/20",
            (1, -1, 0, 1, 0): "-sqrt(10)/20",
            (-1, 1, 0, 0, 1): "-sqrt(10)/20",
            (1, 1, 0, 0, 1): "sqrt(10)/20",
            (-1, -1, 0, 1, 0): "sqrt(10)/20",
            (1, 1, 0, 1, 0): "sqrt(10)/20",
            (-1, -1, 0, 0, 1): "sqrt(10)/20",
        },
        "z_006": {
            (0, 1, 1, 0, 0): "-sqrt(30)/30",
            (0, -1, -1, 0, 0): "-sqrt(30)/30",
            (0, 1, 1, 1, 1): "sqrt(30)/60",
            (0, -1, -1, 1, 1): "sqrt(30)/60",
            (0, 1, 1, 2, 2): "sqrt(30)/60",
            (0, -1, -1, 2, 2): "sqrt(30)/60",
            (0, 1, -1, 0, 0): "-sqrt(30)/30",
            (0, -1, 1, 0, 0): "-sqrt(30)/30",
            (0, 1, -1, 1, 1): "sqrt(30)/60",
            (0, -1, 1, 1, 1): "sqrt(30)/60",
            (0, 1, -1, 2, 2): "sqrt(30)/60",
            (0, -1, 1, 2, 2): "sqrt(30)/60",
            (1, 0, -1, 0, 0): "sqrt(30)/60",
            (-1, 0, 1, 0, 0): "sqrt(30)/60",
            (1, 0, -1, 1, 1): "-sqrt(30)/30",
            (-1, 0, 1, 1, 1): "-sqrt(30)/30",
            (1, 0, -1, 2, 2): "sqrt(30)/60",
            (-1, 0, 1, 2, 2): "sqrt(30)/60",
            (1, -1, 0, 0, 0): "sqrt(30)/60",
            (-1, 1, 0, 0, 0): "sqrt(30)/60",
            (1, -1, 0, 1, 1): "sqrt(30)/60",
            (-1, 1, 0, 1, 1): "sqrt(30)/60",
            (1, -1, 0, 2, 2): "-sqrt(30)/30",
            (-1, 1, 0, 2, 2): "-sqrt(30)/30",
            (1, 0, 1, 0, 0): "sqrt(30)/60",
            (-1, 0, -1, 0, 0): "sqrt(30)/60",
            (1, 0, 1, 1, 1): "-sqrt(30)/30",
            (-1, 0, -1, 1, 1): "-sqrt(30)/30",
            (1, 0, 1, 2, 2): "sqrt(30)/60",
            (-1, 0, -1, 2, 2): "sqrt(30)/60",
            (1, 1, 0, 0, 0): "sqrt(30)/60",
            (-1, -1, 0, 0, 0): "sqrt(30)/60",
            (1, 1, 0, 1, 1): "sqrt(30)/60",
            (-1, -1, 0, 1, 1): "sqrt(30)/60",
            (1, 1, 0, 2, 2): "-sqrt(30)/30",
            (-1, -1, 0, 2, 2): "-sqrt(30)/30",
            (0, 1, 1, 1, 2): "-sqrt(15)/30",
            (0, -1, -1, 2, 1): "-sqrt(15)/30",
            (0, 1, 1, 2, 1): "-sqrt(15)/30",
            (0, -1, -1, 1, 2): "-sqrt(15)/30",
            (0, 1, -1, 1, 2): "sqrt(15)/30",
            (0, -1, 1, 2, 1): "sqrt(15)/30",
            (0, 1, -1, 2, 1): "sqrt(15)/30",
            (0, -1, 1, 1, 2): "sqrt(15)/30",
            (1, 0, -1, 0, 2): "sqrt(15)/30",
            (-1, 0, 1, 2, 0): "sqrt(15)/30",
            (1, 0, -1, 2, 0): "sqrt(15)/30",
            (-1, 0, 1, 0, 2): "sqrt(15)/30",
            (1, 0, 1, 0, 2): "-sqrt(15)/30",
            (-1, 0, -1, 2, 0): "-sqrt(15)/30",
            (1, 0, 1, 2, 0): "-sqrt(15)/30",
            (-1, 0, -1, 0, 2): "-sqrt(15)/30",
            (1, -1, 0, 0, 1): "sqrt(15)/30",
            (-1, 1, 0, 1, 0): "sqrt(15)/30",
            (1, -1, 0, 1, 0): "sqrt(15)/30",
            (-1, 1, 0, 0, 1): "sqrt(15)/30",
            (1, 1, 0, 0, 1): "-sqrt(15)/30",
            (-1, -1, 0, 1, 0): "-sqrt(15)/30",
            (1, 1, 0, 1, 0): "-sqrt(15)/30",
            (-1, -1, 0, 0, 1): "-sqrt(15)/30",
        },
    },
}
