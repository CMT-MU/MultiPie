"""
== SAMB in full matrix form (* only for crystal) ===
- model : model name.
- molecule : molecule or crystal ?
- group : (tag, detailed str)
- dimension : dimension of full matrix
- ket : ket basis list, orbital@site
- version : MultiPie version
- k_point* : representative k points
- k_path* : high-symmetry line in k space
- A* : transform matrix, [a1,a2,a3]
- bond* : { "bond_#": "vector" }
- matrix : { "z_#": "matrix" }
"""
BCT = {
    "model": "BCT",
    "molecule": False,
    "group": ("D4h^17", "space group No. 139 : D4h^17 / I4/mmm : PG D4h"),
    "dimension": 6,
    "ket": ["(s,U)@A_1", "(s,D)@A_1", "(px,U)@A_1", "(px,D)@A_1", "(py,U)@A_1", "(py,D)@A_1"],
    "version": "1.1.10",
    "k_point": {"Γ": "[0, 0, 0]", "X": "[1/2, 0, 0]"},
    "k_path": "Γ-X",
    "A": "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 2.32]]",
    "bond": {
        "bond_001": "[1, 0, 0]",
        "bond_002": "[0, 1, 0]",
        "bond_003": "[1/2, 1/2, 1/2]",
        "bond_004": "[1/2, 1/2, -1/2]",
        "bond_005": "[-1/2, 1/2, 1/2]",
        "bond_006": "[1/2, -1/2, 1/2]",
        "bond_007": "[0, 0, 1]",
    },
    "matrix": {
        "z_001": "[[sqrt(2)/2, 0, 0, 0, 0, 0], [0, sqrt(2)/2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]",
        "z_002": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 1/2, 0, 0, 0], [0, 0, 0, 1/2, 0, 0], [0, 0, 0, 0, 1/2, 0], [0, 0, 0, 0, 0, 1/2]]",
        "z_003": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -I/2, 0], [0, 0, 0, 0, 0, I/2], [0, 0, I/2, 0, 0, 0], [0, 0, 0, -I/2, 0, 0]]",
        "z_004": "[[sqrt(2)*c001/2 + sqrt(2)*c002/2, 0, 0, 0, 0, 0], [0, sqrt(2)*c001/2 + sqrt(2)*c002/2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]",
        "z_005": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, c001/2 + c002/2, 0, 0, 0], [0, 0, 0, c001/2 + c002/2, 0, 0], [0, 0, 0, 0, c001/2 + c002/2, 0], [0, 0, 0, 0, 0, c001/2 + c002/2]]",
        "z_006": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -I*c001/2 - I*c002/2, 0], [0, 0, 0, 0, 0, I*c001/2 + I*c002/2], [0, 0, I*c001/2 + I*c002/2, 0, 0, 0], [0, 0, 0, -I*c001/2 - I*c002/2, 0, 0]]",
        "z_007": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, c001/2 - c002/2, 0, 0, 0], [0, 0, 0, c001/2 - c002/2, 0, 0], [0, 0, 0, 0, -c001/2 + c002/2, 0], [0, 0, 0, 0, 0, -c001/2 + c002/2]]",
        "z_008": "[[c003/2 + c004/2 + c005/2 + c006/2, 0, 0, 0, 0, 0], [0, c003/2 + c004/2 + c005/2 + c006/2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]",
        "z_009": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 + sqrt(2)*c005/4 + sqrt(2)*c006/4, 0, 0, 0], [0, 0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 + sqrt(2)*c005/4 + sqrt(2)*c006/4, 0, 0], [0, 0, 0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 + sqrt(2)*c005/4 + sqrt(2)*c006/4, 0], [0, 0, 0, 0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 + sqrt(2)*c005/4 + sqrt(2)*c006/4]]",
        "z_010": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(2)*I*c003/4 - sqrt(2)*I*c004/4 - sqrt(2)*I*c005/4 - sqrt(2)*I*c006/4, 0], [0, 0, 0, 0, 0, sqrt(2)*I*c003/4 + sqrt(2)*I*c004/4 + sqrt(2)*I*c005/4 + sqrt(2)*I*c006/4], [0, 0, sqrt(2)*I*c003/4 + sqrt(2)*I*c004/4 + sqrt(2)*I*c005/4 + sqrt(2)*I*c006/4, 0, 0, 0], [0, 0, 0, -sqrt(2)*I*c003/4 - sqrt(2)*I*c004/4 - sqrt(2)*I*c005/4 - sqrt(2)*I*c006/4, 0, 0]]",
        "z_011": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 - sqrt(2)*c005/4 - sqrt(2)*c006/4, 0], [0, 0, 0, 0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 - sqrt(2)*c005/4 - sqrt(2)*c006/4], [0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 - sqrt(2)*c005/4 - sqrt(2)*c006/4, 0, 0, 0], [0, 0, 0, sqrt(2)*c003/4 + sqrt(2)*c004/4 - sqrt(2)*c005/4 - sqrt(2)*c006/4, 0, 0]]",
        "z_012": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, -c003/4 - I*c003/4 + c004/4 + I*c004/4 - c005/4 + I*c005/4 + c006/4 - I*c006/4], [0, 0, 0, 0, c003/4 - I*c003/4 - c004/4 + I*c004/4 + c005/4 + I*c005/4 - c006/4 - I*c006/4, 0], [0, 0, 0, c003/4 + I*c003/4 - c004/4 - I*c004/4 + c005/4 - I*c005/4 - c006/4 + I*c006/4, 0, 0], [0, 0, -c003/4 + I*c003/4 + c004/4 - I*c004/4 - c005/4 - I*c005/4 + c006/4 + I*c006/4, 0, 0, 0]]",
        "z_013": "[[c007, 0, 0, 0, 0, 0], [0, c007, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]",
        "z_014": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, sqrt(2)*c007/2, 0, 0, 0], [0, 0, 0, sqrt(2)*c007/2, 0, 0], [0, 0, 0, 0, sqrt(2)*c007/2, 0], [0, 0, 0, 0, 0, sqrt(2)*c007/2]]",
        "z_015": "[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(2)*I*c007/2, 0], [0, 0, 0, 0, 0, sqrt(2)*I*c007/2], [0, 0, sqrt(2)*I*c007/2, 0, 0, 0], [0, 0, 0, -sqrt(2)*I*c007/2, 0, 0]]",
    },
}
