"""
== SAMB in full matrix form (* only for crystal) ===
- model : model name.
- molecule : molecule or crystal ?
- group : (tag, detailed str)
- dimension : dimension of full matrix
- ket : ket basis list, orbital@site
- version : MultiPie version
- k_point* : representative k points
- k_path* : high-symmetry line in k space
- A* : transform matrix, [a1,a2,a3]
- bond* : { "bond_#": "vector" }
- matrix : { "z_#": "matrix" }
"""
CH4 = {
    "model": "CH4",
    "molecule": True,
    "group": ("Td", "point group No. 31 : Td / -43m"),
    "dimension": 16,
    "ket": [
        "(s,U)@C_1",
        "(s,D)@C_1",
        "(px,U)@C_1",
        "(px,D)@C_1",
        "(py,U)@C_1",
        "(py,D)@C_1",
        "(pz,U)@C_1",
        "(pz,D)@C_1",
        "(s,U)@H_1",
        "(s,D)@H_1",
        "(s,U)@H_2",
        "(s,D)@H_2",
        "(s,U)@H_3",
        "(s,D)@H_3",
        "(s,U)@H_4",
        "(s,D)@H_4",
    ],
    "version": "1.1.2",
    "matrix": {
        "z_001": "[[sqrt(2)/2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(2)/2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_002": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_003": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*I/6, 0, 0, sqrt(3)/6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(3)*I/6, -sqrt(3)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)*I/6, 0, 0, 0, 0, -sqrt(3)*I/6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(3)*I/6, 0, 0, -sqrt(3)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(3)/6, 0, sqrt(3)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)/6, 0, sqrt(3)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_004": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(2)/4]]",
        "z_005": "[[0, 0, 0, 0, 0, 0, 0, 0, 1/4, 0, 1/4, 0, 1/4, 0, 1/4, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1/4, 0, 1/4, 0, 1/4, 0, 1/4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_006": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, sqrt(3)/12, 0, -sqrt(3)/12], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, sqrt(3)/12, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, sqrt(3)/12], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12], [0, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(3)/12, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(3)/12, 0, sqrt(3)/12, 0, -sqrt(3)/12, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_007": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)*I/24, sqrt(6)/24, sqrt(6)*I/24, sqrt(6)/24, sqrt(6)*I/24, -sqrt(6)/24, -sqrt(6)*I/24, -sqrt(6)/24], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)/24, sqrt(6)*I/24, -sqrt(6)/24, -sqrt(6)*I/24, sqrt(6)/24, -sqrt(6)*I/24, sqrt(6)/24, sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)/24 + sqrt(6)*I/24, 0, sqrt(6)/24 - sqrt(6)*I/24, 0, -sqrt(6)/24 - sqrt(6)*I/24, 0, sqrt(6)/24 + sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(6)/24 + sqrt(6)*I/24, 0, -sqrt(6)/24 - sqrt(6)*I/24, 0, sqrt(6)/24 - sqrt(6)*I/24, 0, -sqrt(6)/24 + sqrt(6)*I/24, 0], [0, 0, sqrt(6)*I/24, -sqrt(6)/24, -sqrt(6)*I/24, sqrt(6)*I/24, 0, sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)/24, -sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)*I/24, -sqrt(6)/24, sqrt(6)*I/24, sqrt(6)*I/24, 0, -sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)/24, sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)*I/24, sqrt(6)/24, -sqrt(6)*I/24, -sqrt(6)*I/24, 0, sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)/24, sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)*I/24, sqrt(6)/24, sqrt(6)*I/24, -sqrt(6)*I/24, 0, -sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)/24, -sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_008": "[[0, 0, 0, sqrt(6)*I/6, 0, sqrt(6)/6, sqrt(6)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)*I/6, 0, -sqrt(6)/6, 0, 0, -sqrt(6)*I/6, 0, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(6)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-sqrt(6)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(6)/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-sqrt(6)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(6)*I/6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_009": "[[0, 0, 0, 0, 0, 0, 0, 0, -sqrt(3)*I/12, -sqrt(3)/12 - sqrt(3)*I/12, -sqrt(3)*I/12, sqrt(3)/12 + sqrt(3)*I/12, sqrt(3)*I/12, sqrt(3)/12 - sqrt(3)*I/12, sqrt(3)*I/12, -sqrt(3)/12 + sqrt(3)*I/12], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12 - sqrt(3)*I/12, sqrt(3)*I/12, -sqrt(3)/12 + sqrt(3)*I/12, sqrt(3)*I/12, -sqrt(3)/12 - sqrt(3)*I/12, -sqrt(3)*I/12, sqrt(3)/12 + sqrt(3)*I/12, -sqrt(3)*I/12], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)*I/12, sqrt(3)/12 + sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-sqrt(3)/12 + sqrt(3)*I/12, -sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)*I/12, -sqrt(3)/12 - sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)/12 - sqrt(3)*I/12, -sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-sqrt(3)*I/12, -sqrt(3)/12 + sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [sqrt(3)/12 + sqrt(3)*I/12, sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-sqrt(3)*I/12, sqrt(3)/12 - sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [-sqrt(3)/12 - sqrt(3)*I/12, sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_010": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12, 0, -sqrt(3)/12], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, sqrt(3)/12, 0, sqrt(3)/12, 0], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0, -sqrt(3)*I/12, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, sqrt(3)*I/12, 0, sqrt(3)*I/12, 0, sqrt(3)*I/12, 0, sqrt(3)*I/12], [0, 0, 0, sqrt(3)*I/12, 0, sqrt(3)/12, sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)*I/12, 0, -sqrt(3)/12, 0, 0, -sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(3)*I/12, 0, sqrt(3)/12, sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)*I/12, 0, -sqrt(3)/12, 0, 0, -sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(3)*I/12, 0, sqrt(3)/12, sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)*I/12, 0, -sqrt(3)/12, 0, 0, -sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(3)*I/12, 0, sqrt(3)/12, sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)*I/12, 0, -sqrt(3)/12, 0, 0, -sqrt(3)*I/12, 0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_011": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)*I/24, -sqrt(6)/24, sqrt(6)*I/24, -sqrt(6)/24, sqrt(6)*I/24, sqrt(6)/24, -sqrt(6)*I/24, sqrt(6)/24], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(6)/24, sqrt(6)*I/24, sqrt(6)/24, -sqrt(6)*I/24, -sqrt(6)/24, -sqrt(6)*I/24, -sqrt(6)/24, sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, 0, -sqrt(6)/24 - sqrt(6)*I/24, 0, sqrt(6)/24 + sqrt(6)*I/24, 0, -sqrt(6)/24 + sqrt(6)*I/24, 0, sqrt(6)/24 - sqrt(6)*I/24], [0, 0, 0, 0, 0, 0, 0, 0, sqrt(6)/24 - sqrt(6)*I/24, 0, -sqrt(6)/24 + sqrt(6)*I/24, 0, sqrt(6)/24 + sqrt(6)*I/24, 0, -sqrt(6)/24 - sqrt(6)*I/24, 0], [0, 0, sqrt(6)*I/24, sqrt(6)/24, sqrt(6)*I/24, sqrt(6)*I/24, 0, sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)/24, -sqrt(6)*I/24, sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)*I/24, sqrt(6)/24, -sqrt(6)*I/24, sqrt(6)*I/24, 0, -sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)/24, sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)*I/24, -sqrt(6)/24, sqrt(6)*I/24, -sqrt(6)*I/24, 0, sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)/24, sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)*I/24, -sqrt(6)/24 - sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)*I/24, -sqrt(6)/24, -sqrt(6)*I/24, -sqrt(6)*I/24, 0, -sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)/24, -sqrt(6)*I/24, -sqrt(6)*I/24, sqrt(6)*I/24, sqrt(6)/24 + sqrt(6)*I/24, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
    },
}
