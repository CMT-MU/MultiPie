"""
== SAMB in full matrix form in real space (* only for crystal) ===
- model : model name.
- molecule : molecule or crystal ?
- group : (tag, detailed str)
- dimension : dimension of full matrix
- ket : ket basis list, orbital@site
- version : MultiPie version
- k_point* : representative k points
- k_path* : high-symmetry line in k space
- cell_site : { name_idx(pset): (position, SOs) }
- A* : transform matrix, [a1,a2,a3]
- matrix : { "z_#": {(n1, n2, n3, a, b): matrix element} }
"""
C3v1 = {
    "model": "C3v1",
    "molecule": False,
    "group": ("C3v^1", "space group No. 156 : C3v^1 / P3m1 : PG C3v"),
    "dimension": 8,
    "ket": ["(px,U)@A_1", "(px,D)@A_1", "(py,U)@A_1", "(py,D)@A_1", "(px,U)@B_1", "(px,D)@B_1", "(py,U)@B_1", "(py,D)@B_1"],
    "cell_site": {"A_1": ("[1/3, 2/3, 0]", "[1,2,3,4,5,6]"), "B_1": ("[2/3, 1/3, 0]", "[1,2,3,4,5,6]")},
    "version": "1.1.14",
    "k_point": {"Γ": "[0, 0, 0]", "X": "[1/2, 0, 0]"},
    "k_path": "Γ-X",
    "A": "[[1.0, -0.5, 0.0], [0.0, 0.86602540378444, 0.0], [0.0, 0.0, 1.0]]",
    "matrix": {
        "z_001": {(0, 0, 0, 0, 0): "1/2", (0, 0, 0, 1, 1): "1/2", (0, 0, 0, 2, 2): "1/2", (0, 0, 0, 3, 3): "1/2"},
        "z_002": {(0, 0, 0, 0, 2): "-I/2", (0, 0, 0, 1, 3): "I/2", (0, 0, 0, 2, 0): "I/2", (0, 0, 0, 3, 1): "-I/2"},
        "z_003": {(0, 0, 0, 4, 4): "1/2", (0, 0, 0, 5, 5): "1/2", (0, 0, 0, 6, 6): "1/2", (0, 0, 0, 7, 7): "1/2"},
        "z_004": {(0, 0, 0, 4, 6): "-I/2", (0, 0, 0, 5, 7): "I/2", (0, 0, 0, 6, 4): "I/2", (0, 0, 0, 7, 5): "-I/2"},
        "z_005": {
            (0, 1, 0, 4, 0): "sqrt(6)/12",
            (0, -1, 0, 0, 4): "sqrt(6)/12",
            (0, 1, 0, 5, 1): "sqrt(6)/12",
            (0, -1, 0, 1, 5): "sqrt(6)/12",
            (0, 1, 0, 6, 2): "sqrt(6)/12",
            (0, -1, 0, 2, 6): "sqrt(6)/12",
            (0, 1, 0, 7, 3): "sqrt(6)/12",
            (0, -1, 0, 3, 7): "sqrt(6)/12",
            (-1, 0, 0, 4, 0): "sqrt(6)/12",
            (1, 0, 0, 0, 4): "sqrt(6)/12",
            (-1, 0, 0, 5, 1): "sqrt(6)/12",
            (1, 0, 0, 1, 5): "sqrt(6)/12",
            (-1, 0, 0, 6, 2): "sqrt(6)/12",
            (1, 0, 0, 2, 6): "sqrt(6)/12",
            (-1, 0, 0, 7, 3): "sqrt(6)/12",
            (1, 0, 0, 3, 7): "sqrt(6)/12",
            (0, 0, 0, 4, 0): "sqrt(6)/12",
            (0, 0, 0, 0, 4): "sqrt(6)/12",
            (0, 0, 0, 5, 1): "sqrt(6)/12",
            (0, 0, 0, 1, 5): "sqrt(6)/12",
            (0, 0, 0, 6, 2): "sqrt(6)/12",
            (0, 0, 0, 2, 6): "sqrt(6)/12",
            (0, 0, 0, 7, 3): "sqrt(6)/12",
            (0, 0, 0, 3, 7): "sqrt(6)/12",
        },
        "z_006": {
            (0, 1, 0, 4, 2): "-sqrt(6)*I/12",
            (0, -1, 0, 2, 4): "sqrt(6)*I/12",
            (0, 1, 0, 5, 3): "sqrt(6)*I/12",
            (0, -1, 0, 3, 5): "-sqrt(6)*I/12",
            (0, 1, 0, 6, 0): "sqrt(6)*I/12",
            (0, -1, 0, 0, 6): "-sqrt(6)*I/12",
            (0, 1, 0, 7, 1): "-sqrt(6)*I/12",
            (0, -1, 0, 1, 7): "sqrt(6)*I/12",
            (-1, 0, 0, 4, 2): "-sqrt(6)*I/12",
            (1, 0, 0, 2, 4): "sqrt(6)*I/12",
            (-1, 0, 0, 5, 3): "sqrt(6)*I/12",
            (1, 0, 0, 3, 5): "-sqrt(6)*I/12",
            (-1, 0, 0, 6, 0): "sqrt(6)*I/12",
            (1, 0, 0, 0, 6): "-sqrt(6)*I/12",
            (-1, 0, 0, 7, 1): "-sqrt(6)*I/12",
            (1, 0, 0, 1, 7): "sqrt(6)*I/12",
            (0, 0, 0, 4, 2): "-sqrt(6)*I/12",
            (0, 0, 0, 2, 4): "sqrt(6)*I/12",
            (0, 0, 0, 5, 3): "sqrt(6)*I/12",
            (0, 0, 0, 3, 5): "-sqrt(6)*I/12",
            (0, 0, 0, 6, 0): "sqrt(6)*I/12",
            (0, 0, 0, 0, 6): "-sqrt(6)*I/12",
            (0, 0, 0, 7, 1): "-sqrt(6)*I/12",
            (0, 0, 0, 1, 7): "sqrt(6)*I/12",
        },
        "z_007": {
            (-1, 0, 0, 4, 2): "sqrt(2)/8",
            (1, 0, 0, 2, 4): "sqrt(2)/8",
            (-1, 0, 0, 5, 3): "sqrt(2)/8",
            (1, 0, 0, 3, 5): "sqrt(2)/8",
            (-1, 0, 0, 6, 0): "sqrt(2)/8",
            (1, 0, 0, 0, 6): "sqrt(2)/8",
            (-1, 0, 0, 7, 1): "sqrt(2)/8",
            (1, 0, 0, 1, 7): "sqrt(2)/8",
            (0, 0, 0, 4, 2): "-sqrt(2)/8",
            (0, 0, 0, 2, 4): "-sqrt(2)/8",
            (0, 0, 0, 5, 3): "-sqrt(2)/8",
            (0, 0, 0, 3, 5): "-sqrt(2)/8",
            (0, 0, 0, 6, 0): "-sqrt(2)/8",
            (0, 0, 0, 0, 6): "-sqrt(2)/8",
            (0, 0, 0, 7, 1): "-sqrt(2)/8",
            (0, 0, 0, 1, 7): "-sqrt(2)/8",
            (0, 1, 0, 4, 0): "-sqrt(6)/12",
            (0, -1, 0, 0, 4): "-sqrt(6)/12",
            (0, 1, 0, 5, 1): "-sqrt(6)/12",
            (0, -1, 0, 1, 5): "-sqrt(6)/12",
            (0, 1, 0, 6, 2): "sqrt(6)/12",
            (0, -1, 0, 2, 6): "sqrt(6)/12",
            (0, 1, 0, 7, 3): "sqrt(6)/12",
            (0, -1, 0, 3, 7): "sqrt(6)/12",
            (-1, 0, 0, 4, 0): "sqrt(6)/24",
            (1, 0, 0, 0, 4): "sqrt(6)/24",
            (-1, 0, 0, 5, 1): "sqrt(6)/24",
            (1, 0, 0, 1, 5): "sqrt(6)/24",
            (-1, 0, 0, 6, 2): "-sqrt(6)/24",
            (1, 0, 0, 2, 6): "-sqrt(6)/24",
            (-1, 0, 0, 7, 3): "-sqrt(6)/24",
            (1, 0, 0, 3, 7): "-sqrt(6)/24",
            (0, 0, 0, 4, 0): "sqrt(6)/24",
            (0, 0, 0, 0, 4): "sqrt(6)/24",
            (0, 0, 0, 5, 1): "sqrt(6)/24",
            (0, 0, 0, 1, 5): "sqrt(6)/24",
            (0, 0, 0, 6, 2): "-sqrt(6)/24",
            (0, 0, 0, 2, 6): "-sqrt(6)/24",
            (0, 0, 0, 7, 3): "-sqrt(6)/24",
            (0, 0, 0, 3, 7): "-sqrt(6)/24",
        },
        "z_008": {
            (-1, 0, 0, 4, 3): "-sqrt(6)/24 - sqrt(2)*I/8",
            (1, 0, 0, 3, 4): "-sqrt(6)/24 + sqrt(2)*I/8",
            (-1, 0, 0, 5, 2): "sqrt(6)/24 - sqrt(2)*I/8",
            (1, 0, 0, 2, 5): "sqrt(6)/24 + sqrt(2)*I/8",
            (-1, 0, 0, 6, 1): "sqrt(6)/24 + sqrt(2)*I/8",
            (1, 0, 0, 1, 6): "sqrt(6)/24 - sqrt(2)*I/8",
            (-1, 0, 0, 7, 0): "-sqrt(6)/24 + sqrt(2)*I/8",
            (1, 0, 0, 0, 7): "-sqrt(6)/24 - sqrt(2)*I/8",
            (0, 0, 0, 4, 3): "-sqrt(6)/24 + sqrt(2)*I/8",
            (0, 0, 0, 3, 4): "-sqrt(6)/24 - sqrt(2)*I/8",
            (0, 0, 0, 5, 2): "sqrt(6)/24 + sqrt(2)*I/8",
            (0, 0, 0, 2, 5): "sqrt(6)/24 - sqrt(2)*I/8",
            (0, 0, 0, 6, 1): "sqrt(6)/24 - sqrt(2)*I/8",
            (0, 0, 0, 1, 6): "sqrt(6)/24 + sqrt(2)*I/8",
            (0, 0, 0, 7, 0): "-sqrt(6)/24 - sqrt(2)*I/8",
            (0, 0, 0, 0, 7): "-sqrt(6)/24 + sqrt(2)*I/8",
            (0, 1, 0, 4, 3): "sqrt(6)/12",
            (0, -1, 0, 3, 4): "sqrt(6)/12",
            (0, 1, 0, 5, 2): "-sqrt(6)/12",
            (0, -1, 0, 2, 5): "-sqrt(6)/12",
            (0, 1, 0, 6, 1): "-sqrt(6)/12",
            (0, -1, 0, 1, 6): "-sqrt(6)/12",
            (0, 1, 0, 7, 0): "sqrt(6)/12",
            (0, -1, 0, 0, 7): "sqrt(6)/12",
        },
        "z_009": {
            (-1, 0, 0, 4, 1): "sqrt(38)/76 + sqrt(114)*I/114",
            (1, 0, 0, 1, 4): "sqrt(38)/76 - sqrt(114)*I/114",
            (-1, 0, 0, 4, 3): "sqrt(114)/152 - 3*sqrt(38)*I/152",
            (1, 0, 0, 3, 4): "sqrt(114)/152 + 3*sqrt(38)*I/152",
            (-1, 0, 0, 5, 0): "-sqrt(38)/76 + sqrt(114)*I/114",
            (1, 0, 0, 0, 5): "-sqrt(38)/76 - sqrt(114)*I/114",
            (-1, 0, 0, 5, 2): "-sqrt(114)/152 - 3*sqrt(38)*I/152",
            (1, 0, 0, 2, 5): "-sqrt(114)/152 + 3*sqrt(38)*I/152",
            (-1, 0, 0, 6, 1): "sqrt(114)/152 - 3*sqrt(38)*I/152",
            (1, 0, 0, 1, 6): "sqrt(114)/152 + 3*sqrt(38)*I/152",
            (-1, 0, 0, 6, 3): "-sqrt(38)/38 - sqrt(114)*I/228",
            (1, 0, 0, 3, 6): "-sqrt(38)/38 + sqrt(114)*I/228",
            (-1, 0, 0, 7, 0): "-sqrt(114)/152 - 3*sqrt(38)*I/152",
            (1, 0, 0, 0, 7): "-sqrt(114)/152 + 3*sqrt(38)*I/152",
            (-1, 0, 0, 7, 2): "sqrt(38)/38 - sqrt(114)*I/228",
            (1, 0, 0, 2, 7): "sqrt(38)/38 + sqrt(114)*I/228",
            (0, 0, 0, 4, 1): "-sqrt(38)/76 + sqrt(114)*I/114",
            (0, 0, 0, 1, 4): "-sqrt(38)/76 - sqrt(114)*I/114",
            (0, 0, 0, 4, 3): "sqrt(114)/152 + 3*sqrt(38)*I/152",
            (0, 0, 0, 3, 4): "sqrt(114)/152 - 3*sqrt(38)*I/152",
            (0, 0, 0, 5, 0): "sqrt(38)/76 + sqrt(114)*I/114",
            (0, 0, 0, 0, 5): "sqrt(38)/76 - sqrt(114)*I/114",
            (0, 0, 0, 5, 2): "-sqrt(114)/152 + 3*sqrt(38)*I/152",
            (0, 0, 0, 2, 5): "-sqrt(114)/152 - 3*sqrt(38)*I/152",
            (0, 0, 0, 6, 1): "sqrt(114)/152 + 3*sqrt(38)*I/152",
            (0, 0, 0, 1, 6): "sqrt(114)/152 - 3*sqrt(38)*I/152",
            (0, 0, 0, 6, 3): "sqrt(38)/38 - sqrt(114)*I/228",
            (0, 0, 0, 3, 6): "sqrt(38)/38 + sqrt(114)*I/228",
            (0, 0, 0, 7, 0): "-sqrt(114)/152 + 3*sqrt(38)*I/152",
            (0, 0, 0, 0, 7): "-sqrt(114)/152 - 3*sqrt(38)*I/152",
            (0, 0, 0, 7, 2): "-sqrt(38)/38 - sqrt(114)*I/228",
            (0, 0, 0, 2, 7): "-sqrt(38)/38 + sqrt(114)*I/228",
            (0, 1, 0, 4, 1): "-sqrt(114)*I/57",
            (0, -1, 0, 1, 4): "sqrt(114)*I/57",
            (0, 1, 0, 4, 3): "-sqrt(114)/76",
            (0, -1, 0, 3, 4): "-sqrt(114)/76",
            (0, 1, 0, 5, 0): "-sqrt(114)*I/57",
            (0, -1, 0, 0, 5): "sqrt(114)*I/57",
            (0, 1, 0, 5, 2): "sqrt(114)/76",
            (0, -1, 0, 2, 5): "sqrt(114)/76",
            (0, 1, 0, 6, 1): "-sqrt(114)/76",
            (0, -1, 0, 1, 6): "-sqrt(114)/76",
            (0, 1, 0, 6, 3): "sqrt(114)*I/114",
            (0, -1, 0, 3, 6): "-sqrt(114)*I/114",
            (0, 1, 0, 7, 0): "sqrt(114)/76",
            (0, -1, 0, 0, 7): "sqrt(114)/76",
            (0, 1, 0, 7, 2): "sqrt(114)*I/114",
            (0, -1, 0, 2, 7): "-sqrt(114)*I/114",
        },
        "z_010": {
            (0, 1, 0, 4, 1): "sqrt(3)*I/12",
            (0, -1, 0, 1, 4): "-sqrt(3)*I/12",
            (0, 1, 0, 4, 3): "-sqrt(3)/12",
            (0, -1, 0, 3, 4): "-sqrt(3)/12",
            (0, 1, 0, 5, 0): "sqrt(3)*I/12",
            (0, -1, 0, 0, 5): "-sqrt(3)*I/12",
            (0, 1, 0, 5, 2): "sqrt(3)/12",
            (0, -1, 0, 2, 5): "sqrt(3)/12",
            (0, 1, 0, 6, 1): "-sqrt(3)/12",
            (0, -1, 0, 1, 6): "-sqrt(3)/12",
            (0, 1, 0, 6, 3): "-sqrt(3)*I/12",
            (0, -1, 0, 3, 6): "sqrt(3)*I/12",
            (0, 1, 0, 7, 0): "sqrt(3)/12",
            (0, -1, 0, 0, 7): "sqrt(3)/12",
            (0, 1, 0, 7, 2): "-sqrt(3)*I/12",
            (0, -1, 0, 2, 7): "sqrt(3)*I/12",
            (-1, 0, 0, 4, 1): "sqrt(3)*I/12",
            (1, 0, 0, 1, 4): "-sqrt(3)*I/12",
            (-1, 0, 0, 4, 3): "-sqrt(3)/12",
            (1, 0, 0, 3, 4): "-sqrt(3)/12",
            (-1, 0, 0, 5, 0): "sqrt(3)*I/12",
            (1, 0, 0, 0, 5): "-sqrt(3)*I/12",
            (-1, 0, 0, 5, 2): "sqrt(3)/12",
            (1, 0, 0, 2, 5): "sqrt(3)/12",
            (-1, 0, 0, 6, 1): "-sqrt(3)/12",
            (1, 0, 0, 1, 6): "-sqrt(3)/12",
            (-1, 0, 0, 6, 3): "-sqrt(3)*I/12",
            (1, 0, 0, 3, 6): "sqrt(3)*I/12",
            (-1, 0, 0, 7, 0): "sqrt(3)/12",
            (1, 0, 0, 0, 7): "sqrt(3)/12",
            (-1, 0, 0, 7, 2): "-sqrt(3)*I/12",
            (1, 0, 0, 2, 7): "sqrt(3)*I/12",
            (0, 0, 0, 4, 1): "sqrt(3)*I/12",
            (0, 0, 0, 1, 4): "-sqrt(3)*I/12",
            (0, 0, 0, 4, 3): "-sqrt(3)/12",
            (0, 0, 0, 3, 4): "-sqrt(3)/12",
            (0, 0, 0, 5, 0): "sqrt(3)*I/12",
            (0, 0, 0, 0, 5): "-sqrt(3)*I/12",
            (0, 0, 0, 5, 2): "sqrt(3)/12",
            (0, 0, 0, 2, 5): "sqrt(3)/12",
            (0, 0, 0, 6, 1): "-sqrt(3)/12",
            (0, 0, 0, 1, 6): "-sqrt(3)/12",
            (0, 0, 0, 6, 3): "-sqrt(3)*I/12",
            (0, 0, 0, 3, 6): "sqrt(3)*I/12",
            (0, 0, 0, 7, 0): "sqrt(3)/12",
            (0, 0, 0, 0, 7): "sqrt(3)/12",
            (0, 0, 0, 7, 2): "-sqrt(3)*I/12",
            (0, 0, 0, 2, 7): "sqrt(3)*I/12",
        },
        "z_011": {
            (-1, 0, 0, 4, 0): "sqrt(2)*I/8",
            (1, 0, 0, 0, 4): "-sqrt(2)*I/8",
            (-1, 0, 0, 5, 1): "-sqrt(2)*I/8",
            (1, 0, 0, 1, 5): "sqrt(2)*I/8",
            (-1, 0, 0, 6, 2): "-sqrt(2)*I/8",
            (1, 0, 0, 2, 6): "sqrt(2)*I/8",
            (-1, 0, 0, 7, 3): "sqrt(2)*I/8",
            (1, 0, 0, 3, 7): "-sqrt(2)*I/8",
            (0, 0, 0, 4, 0): "-sqrt(2)*I/8",
            (0, 0, 0, 0, 4): "sqrt(2)*I/8",
            (0, 0, 0, 5, 1): "sqrt(2)*I/8",
            (0, 0, 0, 1, 5): "-sqrt(2)*I/8",
            (0, 0, 0, 6, 2): "sqrt(2)*I/8",
            (0, 0, 0, 2, 6): "-sqrt(2)*I/8",
            (0, 0, 0, 7, 3): "-sqrt(2)*I/8",
            (0, 0, 0, 3, 7): "sqrt(2)*I/8",
            (0, 1, 0, 4, 2): "sqrt(6)*I/12",
            (0, -1, 0, 2, 4): "-sqrt(6)*I/12",
            (0, 1, 0, 5, 3): "-sqrt(6)*I/12",
            (0, -1, 0, 3, 5): "sqrt(6)*I/12",
            (0, 1, 0, 6, 0): "sqrt(6)*I/12",
            (0, -1, 0, 0, 6): "-sqrt(6)*I/12",
            (0, 1, 0, 7, 1): "-sqrt(6)*I/12",
            (0, -1, 0, 1, 7): "sqrt(6)*I/12",
            (-1, 0, 0, 4, 2): "-sqrt(6)*I/24",
            (1, 0, 0, 2, 4): "sqrt(6)*I/24",
            (-1, 0, 0, 5, 3): "sqrt(6)*I/24",
            (1, 0, 0, 3, 5): "-sqrt(6)*I/24",
            (-1, 0, 0, 6, 0): "-sqrt(6)*I/24",
            (1, 0, 0, 0, 6): "sqrt(6)*I/24",
            (-1, 0, 0, 7, 1): "sqrt(6)*I/24",
            (1, 0, 0, 1, 7): "-sqrt(6)*I/24",
            (0, 0, 0, 4, 2): "-sqrt(6)*I/24",
            (0, 0, 0, 2, 4): "sqrt(6)*I/24",
            (0, 0, 0, 5, 3): "sqrt(6)*I/24",
            (0, 0, 0, 3, 5): "-sqrt(6)*I/24",
            (0, 0, 0, 6, 0): "-sqrt(6)*I/24",
            (0, 0, 0, 0, 6): "sqrt(6)*I/24",
            (0, 0, 0, 7, 1): "sqrt(6)*I/24",
            (0, 0, 0, 1, 7): "-sqrt(6)*I/24",
        },
        "z_012": {
            (-1, 0, 0, 4, 1): "-7*sqrt(19)/152 + 5*sqrt(57)*I/456",
            (1, 0, 0, 1, 4): "-7*sqrt(19)/152 - 5*sqrt(57)*I/456",
            (-1, 0, 0, 4, 3): "-sqrt(57)/456 + sqrt(19)*I/152",
            (1, 0, 0, 3, 4): "-sqrt(57)/456 - sqrt(19)*I/152",
            (-1, 0, 0, 5, 0): "7*sqrt(19)/152 + 5*sqrt(57)*I/456",
            (1, 0, 0, 0, 5): "7*sqrt(19)/152 - 5*sqrt(57)*I/456",
            (-1, 0, 0, 5, 2): "sqrt(57)/456 + sqrt(19)*I/152",
            (1, 0, 0, 2, 5): "sqrt(57)/456 - sqrt(19)*I/152",
            (-1, 0, 0, 6, 1): "-sqrt(57)/456 + sqrt(19)*I/152",
            (1, 0, 0, 1, 6): "-sqrt(57)/456 - sqrt(19)*I/152",
            (-1, 0, 0, 6, 3): "-5*sqrt(19)/152 + 7*sqrt(57)*I/456",
            (1, 0, 0, 3, 6): "-5*sqrt(19)/152 - 7*sqrt(57)*I/456",
            (-1, 0, 0, 7, 0): "sqrt(57)/456 + sqrt(19)*I/152",
            (1, 0, 0, 0, 7): "sqrt(57)/456 - sqrt(19)*I/152",
            (-1, 0, 0, 7, 2): "5*sqrt(19)/152 + 7*sqrt(57)*I/456",
            (1, 0, 0, 2, 7): "5*sqrt(19)/152 - 7*sqrt(57)*I/456",
            (0, 0, 0, 4, 1): "7*sqrt(19)/152 + 5*sqrt(57)*I/456",
            (0, 0, 0, 1, 4): "7*sqrt(19)/152 - 5*sqrt(57)*I/456",
            (0, 0, 0, 4, 3): "-sqrt(57)/456 - sqrt(19)*I/152",
            (0, 0, 0, 3, 4): "-sqrt(57)/456 + sqrt(19)*I/152",
            (0, 0, 0, 5, 0): "-7*sqrt(19)/152 + 5*sqrt(57)*I/456",
            (0, 0, 0, 0, 5): "-7*sqrt(19)/152 - 5*sqrt(57)*I/456",
            (0, 0, 0, 5, 2): "sqrt(57)/456 - sqrt(19)*I/152",
            (0, 0, 0, 2, 5): "sqrt(57)/456 + sqrt(19)*I/152",
            (0, 0, 0, 6, 1): "-sqrt(57)/456 - sqrt(19)*I/152",
            (0, 0, 0, 1, 6): "-sqrt(57)/456 + sqrt(19)*I/152",
            (0, 0, 0, 6, 3): "5*sqrt(19)/152 + 7*sqrt(57)*I/456",
            (0, 0, 0, 3, 6): "5*sqrt(19)/152 - 7*sqrt(57)*I/456",
            (0, 0, 0, 7, 0): "sqrt(57)/456 - sqrt(19)*I/152",
            (0, 0, 0, 0, 7): "sqrt(57)/456 + sqrt(19)*I/152",
            (0, 0, 0, 7, 2): "-5*sqrt(19)/152 + 7*sqrt(57)*I/456",
            (0, 0, 0, 2, 7): "-5*sqrt(19)/152 - 7*sqrt(57)*I/456",
            (0, 1, 0, 4, 1): "-5*sqrt(57)*I/228",
            (0, -1, 0, 1, 4): "5*sqrt(57)*I/228",
            (0, 1, 0, 4, 3): "sqrt(57)/228",
            (0, -1, 0, 3, 4): "sqrt(57)/228",
            (0, 1, 0, 5, 0): "-5*sqrt(57)*I/228",
            (0, -1, 0, 0, 5): "5*sqrt(57)*I/228",
            (0, 1, 0, 5, 2): "-sqrt(57)/228",
            (0, -1, 0, 2, 5): "-sqrt(57)/228",
            (0, 1, 0, 6, 1): "sqrt(57)/228",
            (0, -1, 0, 1, 6): "sqrt(57)/228",
            (0, 1, 0, 6, 3): "-7*sqrt(57)*I/228",
            (0, -1, 0, 3, 6): "7*sqrt(57)*I/228",
            (0, 1, 0, 7, 0): "-sqrt(57)/228",
            (0, -1, 0, 0, 7): "-sqrt(57)/228",
            (0, 1, 0, 7, 2): "-7*sqrt(57)*I/228",
            (0, -1, 0, 2, 7): "7*sqrt(57)*I/228",
        },
    },
}
