"""
== SAMB in full matrix form (* only for crystal) ===
- model : model name.
- molecule : molecule or crystal ?
- group : (tag, detailed str)
- dimension : dimension of full matrix
- ket : ket basis list, orbital@site
- version : MultiPie version
- k_point* : representative k points
- k_path* : high-symmetry line in k space
- A* : transform matrix, [a1,a2,a3]
- bond* : { "bond_#": "vector" }
- matrix : { "z_#": "matrix" }
"""
C3v1 = {
    "model": "C3v1",
    "molecule": False,
    "group": ("C3v^1", "space group No. 156 : C3v^1 / P3m1 : PG C3v"),
    "dimension": 8,
    "ket": ["(px,U)@A_1", "(px,D)@A_1", "(py,U)@A_1", "(py,D)@A_1", "(px,U)@B_1", "(px,D)@B_1", "(py,U)@B_1", "(py,D)@B_1"],
    "version": "1.1.10",
    "k_point": {"Γ": "[0, 0, 0]", "X": "[1/2, 0, 0]"},
    "k_path": "Γ-X",
    "A": "[[1.0, -0.5, 0.0], [0.0, 0.86602540378444, 0.0], [0.0, 0.0, 1.0]]",
    "bond": {"bond_001": "[1/3, 2/3, 0]", "bond_002": "[-2/3, -1/3, 0]", "bond_003": "[1/3, -1/3, 0]"},
    "matrix": {
        "z_001": "[[1/2, 0, 0, 0, 0, 0, 0, 0], [0, 1/2, 0, 0, 0, 0, 0, 0], [0, 0, 1/2, 0, 0, 0, 0, 0], [0, 0, 0, 1/2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_002": "[[0, 0, -I/2, 0, 0, 0, 0, 0], [0, 0, 0, I/2, 0, 0, 0, 0], [I/2, 0, 0, 0, 0, 0, 0, 0], [0, -I/2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_003": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1/2, 0, 0, 0], [0, 0, 0, 0, 0, 1/2, 0, 0], [0, 0, 0, 0, 0, 0, 1/2, 0], [0, 0, 0, 0, 0, 0, 0, 1/2]]",
        "z_004": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, -I/2, 0], [0, 0, 0, 0, 0, 0, 0, I/2], [0, 0, 0, 0, I/2, 0, 0, 0], [0, 0, 0, 0, 0, -I/2, 0, 0]]",
        "z_005": "[[0, 0, 0, 0, sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 + sqrt(6)*I*s001/12 + sqrt(6)*I*s002/12 + sqrt(6)*I*s003/12, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 + sqrt(6)*I*s001/12 + sqrt(6)*I*s002/12 + sqrt(6)*I*s003/12, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 + sqrt(6)*I*s001/12 + sqrt(6)*I*s002/12 + sqrt(6)*I*s003/12, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 + sqrt(6)*I*s001/12 + sqrt(6)*I*s002/12 + sqrt(6)*I*s003/12], [sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 - sqrt(6)*I*s001/12 - sqrt(6)*I*s002/12 - sqrt(6)*I*s003/12, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 - sqrt(6)*I*s001/12 - sqrt(6)*I*s002/12 - sqrt(6)*I*s003/12, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 - sqrt(6)*I*s001/12 - sqrt(6)*I*s002/12 - sqrt(6)*I*s003/12, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)*c001/12 + sqrt(6)*c002/12 + sqrt(6)*c003/12 - sqrt(6)*I*s001/12 - sqrt(6)*I*s002/12 - sqrt(6)*I*s003/12, 0, 0, 0, 0]]",
        "z_006": "[[0, 0, 0, 0, 0, 0, -sqrt(6)*I*c001/12 - sqrt(6)*I*c002/12 - sqrt(6)*I*c003/12 + sqrt(6)*s001/12 + sqrt(6)*s002/12 + sqrt(6)*s003/12, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)*I*c001/12 + sqrt(6)*I*c002/12 + sqrt(6)*I*c003/12 - sqrt(6)*s001/12 - sqrt(6)*s002/12 - sqrt(6)*s003/12], [0, 0, 0, 0, sqrt(6)*I*c001/12 + sqrt(6)*I*c002/12 + sqrt(6)*I*c003/12 - sqrt(6)*s001/12 - sqrt(6)*s002/12 - sqrt(6)*s003/12, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(6)*I*c001/12 - sqrt(6)*I*c002/12 - sqrt(6)*I*c003/12 + sqrt(6)*s001/12 + sqrt(6)*s002/12 + sqrt(6)*s003/12, 0, 0], [0, 0, -sqrt(6)*I*c001/12 - sqrt(6)*I*c002/12 - sqrt(6)*I*c003/12 - sqrt(6)*s001/12 - sqrt(6)*s002/12 - sqrt(6)*s003/12, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)*I*c001/12 + sqrt(6)*I*c002/12 + sqrt(6)*I*c003/12 + sqrt(6)*s001/12 + sqrt(6)*s002/12 + sqrt(6)*s003/12, 0, 0, 0, 0], [sqrt(6)*I*c001/12 + sqrt(6)*I*c002/12 + sqrt(6)*I*c003/12 + sqrt(6)*s001/12 + sqrt(6)*s002/12 + sqrt(6)*s003/12, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(6)*I*c001/12 - sqrt(6)*I*c002/12 - sqrt(6)*I*c003/12 - sqrt(6)*s001/12 - sqrt(6)*s002/12 - sqrt(6)*s003/12, 0, 0, 0, 0, 0, 0]]",
        "z_007": "[[0, 0, 0, 0, -sqrt(6)*c001/12 + sqrt(6)*c002/24 + sqrt(6)*c003/24 - sqrt(6)*I*s001/12 + sqrt(6)*I*s002/24 + sqrt(6)*I*s003/24, 0, sqrt(2)*c002/8 - sqrt(2)*c003/8 + sqrt(2)*I*s002/8 - sqrt(2)*I*s003/8, 0], [0, 0, 0, 0, 0, -sqrt(6)*c001/12 + sqrt(6)*c002/24 + sqrt(6)*c003/24 - sqrt(6)*I*s001/12 + sqrt(6)*I*s002/24 + sqrt(6)*I*s003/24, 0, sqrt(2)*c002/8 - sqrt(2)*c003/8 + sqrt(2)*I*s002/8 - sqrt(2)*I*s003/8], [0, 0, 0, 0, sqrt(2)*c002/8 - sqrt(2)*c003/8 + sqrt(2)*I*s002/8 - sqrt(2)*I*s003/8, 0, sqrt(6)*c001/12 - sqrt(6)*c002/24 - sqrt(6)*c003/24 + sqrt(6)*I*s001/12 - sqrt(6)*I*s002/24 - sqrt(6)*I*s003/24, 0], [0, 0, 0, 0, 0, sqrt(2)*c002/8 - sqrt(2)*c003/8 + sqrt(2)*I*s002/8 - sqrt(2)*I*s003/8, 0, sqrt(6)*c001/12 - sqrt(6)*c002/24 - sqrt(6)*c003/24 + sqrt(6)*I*s001/12 - sqrt(6)*I*s002/24 - sqrt(6)*I*s003/24], [-sqrt(6)*c001/12 + sqrt(6)*c002/24 + sqrt(6)*c003/24 + sqrt(6)*I*s001/12 - sqrt(6)*I*s002/24 - sqrt(6)*I*s003/24, 0, sqrt(2)*c002/8 - sqrt(2)*c003/8 - sqrt(2)*I*s002/8 + sqrt(2)*I*s003/8, 0, 0, 0, 0, 0], [0, -sqrt(6)*c001/12 + sqrt(6)*c002/24 + sqrt(6)*c003/24 + sqrt(6)*I*s001/12 - sqrt(6)*I*s002/24 - sqrt(6)*I*s003/24, 0, sqrt(2)*c002/8 - sqrt(2)*c003/8 - sqrt(2)*I*s002/8 + sqrt(2)*I*s003/8, 0, 0, 0, 0], [sqrt(2)*c002/8 - sqrt(2)*c003/8 - sqrt(2)*I*s002/8 + sqrt(2)*I*s003/8, 0, sqrt(6)*c001/12 - sqrt(6)*c002/24 - sqrt(6)*c003/24 - sqrt(6)*I*s001/12 + sqrt(6)*I*s002/24 + sqrt(6)*I*s003/24, 0, 0, 0, 0, 0], [0, sqrt(2)*c002/8 - sqrt(2)*c003/8 - sqrt(2)*I*s002/8 + sqrt(2)*I*s003/8, 0, sqrt(6)*c001/12 - sqrt(6)*c002/24 - sqrt(6)*c003/24 - sqrt(6)*I*s001/12 + sqrt(6)*I*s002/24 + sqrt(6)*I*s003/24, 0, 0, 0, 0]]",
        "z_008": "[[0, 0, 0, 0, 0, 0, 0, sqrt(6)*c001/12 - sqrt(6)*c002/24 - sqrt(2)*I*c002/8 - sqrt(6)*c003/24 + sqrt(2)*I*c003/8 + sqrt(6)*I*s001/12 + sqrt(2)*s002/8 - sqrt(6)*I*s002/24 - sqrt(2)*s003/8 - sqrt(6)*I*s003/24], [0, 0, 0, 0, 0, 0, -sqrt(6)*c001/12 + sqrt(6)*c002/24 - sqrt(2)*I*c002/8 + sqrt(6)*c003/24 + sqrt(2)*I*c003/8 - sqrt(6)*I*s001/12 + sqrt(2)*s002/8 + sqrt(6)*I*s002/24 - sqrt(2)*s003/8 + sqrt(6)*I*s003/24, 0], [0, 0, 0, 0, 0, -sqrt(6)*c001/12 + sqrt(6)*c002/24 + sqrt(2)*I*c002/8 + sqrt(6)*c003/24 - sqrt(2)*I*c003/8 - sqrt(6)*I*s001/12 - sqrt(2)*s002/8 + sqrt(6)*I*s002/24 + sqrt(2)*s003/8 + sqrt(6)*I*s003/24, 0, 0], [0, 0, 0, 0, sqrt(6)*c001/12 - sqrt(6)*c002/24 + sqrt(2)*I*c002/8 - sqrt(6)*c003/24 - sqrt(2)*I*c003/8 + sqrt(6)*I*s001/12 - sqrt(2)*s002/8 - sqrt(6)*I*s002/24 + sqrt(2)*s003/8 - sqrt(6)*I*s003/24, 0, 0, 0], [0, 0, 0, sqrt(6)*c001/12 - sqrt(6)*c002/24 - sqrt(2)*I*c002/8 - sqrt(6)*c003/24 + sqrt(2)*I*c003/8 - sqrt(6)*I*s001/12 - sqrt(2)*s002/8 + sqrt(6)*I*s002/24 + sqrt(2)*s003/8 + sqrt(6)*I*s003/24, 0, 0, 0, 0], [0, 0, -sqrt(6)*c001/12 + sqrt(6)*c002/24 - sqrt(2)*I*c002/8 + sqrt(6)*c003/24 + sqrt(2)*I*c003/8 + sqrt(6)*I*s001/12 - sqrt(2)*s002/8 - sqrt(6)*I*s002/24 + sqrt(2)*s003/8 - sqrt(6)*I*s003/24, 0, 0, 0, 0, 0], [0, -sqrt(6)*c001/12 + sqrt(6)*c002/24 + sqrt(2)*I*c002/8 + sqrt(6)*c003/24 - sqrt(2)*I*c003/8 + sqrt(6)*I*s001/12 + sqrt(2)*s002/8 - sqrt(6)*I*s002/24 - sqrt(2)*s003/8 - sqrt(6)*I*s003/24, 0, 0, 0, 0, 0, 0], [sqrt(6)*c001/12 - sqrt(6)*c002/24 + sqrt(2)*I*c002/8 - sqrt(6)*c003/24 - sqrt(2)*I*c003/8 - sqrt(6)*I*s001/12 + sqrt(2)*s002/8 + sqrt(6)*I*s002/24 - sqrt(2)*s003/8 + sqrt(6)*I*s003/24, 0, 0, 0, 0, 0, 0, 0]]",
        "z_009": "[[0, 0, 0, 0, 0, sqrt(114)*I*c001/57 - sqrt(38)*c002/76 - sqrt(114)*I*c002/114 + sqrt(38)*c003/76 - sqrt(114)*I*c003/114 - sqrt(114)*s001/57 + sqrt(114)*s002/114 - sqrt(38)*I*s002/76 + sqrt(114)*s003/114 + sqrt(38)*I*s003/76, 0, sqrt(114)*c001/76 - sqrt(114)*c002/152 + 3*sqrt(38)*I*c002/152 - sqrt(114)*c003/152 - 3*sqrt(38)*I*c003/152 + sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 - sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 - sqrt(114)*I*s003/152], [0, 0, 0, 0, sqrt(114)*I*c001/57 + sqrt(38)*c002/76 - sqrt(114)*I*c002/114 - sqrt(38)*c003/76 - sqrt(114)*I*c003/114 - sqrt(114)*s001/57 + sqrt(114)*s002/114 + sqrt(38)*I*s002/76 + sqrt(114)*s003/114 - sqrt(38)*I*s003/76, 0, -sqrt(114)*c001/76 + sqrt(114)*c002/152 + 3*sqrt(38)*I*c002/152 + sqrt(114)*c003/152 - 3*sqrt(38)*I*c003/152 - sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 + sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 + sqrt(114)*I*s003/152, 0], [0, 0, 0, 0, 0, sqrt(114)*c001/76 - sqrt(114)*c002/152 + 3*sqrt(38)*I*c002/152 - sqrt(114)*c003/152 - 3*sqrt(38)*I*c003/152 + sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 - sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 - sqrt(114)*I*s003/152, 0, -sqrt(114)*I*c001/114 + sqrt(38)*c002/38 + sqrt(114)*I*c002/228 - sqrt(38)*c003/38 + sqrt(114)*I*c003/228 + sqrt(114)*s001/114 - sqrt(114)*s002/228 + sqrt(38)*I*s002/38 - sqrt(114)*s003/228 - sqrt(38)*I*s003/38], [0, 0, 0, 0, -sqrt(114)*c001/76 + sqrt(114)*c002/152 + 3*sqrt(38)*I*c002/152 + sqrt(114)*c003/152 - 3*sqrt(38)*I*c003/152 - sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 + sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 + sqrt(114)*I*s003/152, 0, -sqrt(114)*I*c001/114 - sqrt(38)*c002/38 + sqrt(114)*I*c002/228 + sqrt(38)*c003/38 + sqrt(114)*I*c003/228 + sqrt(114)*s001/114 - sqrt(114)*s002/228 - sqrt(38)*I*s002/38 - sqrt(114)*s003/228 + sqrt(38)*I*s003/38, 0], [0, -sqrt(114)*I*c001/57 + sqrt(38)*c002/76 + sqrt(114)*I*c002/114 - sqrt(38)*c003/76 + sqrt(114)*I*c003/114 - sqrt(114)*s001/57 + sqrt(114)*s002/114 - sqrt(38)*I*s002/76 + sqrt(114)*s003/114 + sqrt(38)*I*s003/76, 0, -sqrt(114)*c001/76 + sqrt(114)*c002/152 - 3*sqrt(38)*I*c002/152 + sqrt(114)*c003/152 + 3*sqrt(38)*I*c003/152 + sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 - sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 - sqrt(114)*I*s003/152, 0, 0, 0, 0], [-sqrt(114)*I*c001/57 - sqrt(38)*c002/76 + sqrt(114)*I*c002/114 + sqrt(38)*c003/76 + sqrt(114)*I*c003/114 - sqrt(114)*s001/57 + sqrt(114)*s002/114 + sqrt(38)*I*s002/76 + sqrt(114)*s003/114 - sqrt(38)*I*s003/76, 0, sqrt(114)*c001/76 - sqrt(114)*c002/152 - 3*sqrt(38)*I*c002/152 - sqrt(114)*c003/152 + 3*sqrt(38)*I*c003/152 - sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 + sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 + sqrt(114)*I*s003/152, 0, 0, 0, 0, 0], [0, -sqrt(114)*c001/76 + sqrt(114)*c002/152 - 3*sqrt(38)*I*c002/152 + sqrt(114)*c003/152 + 3*sqrt(38)*I*c003/152 + sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 - sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 - sqrt(114)*I*s003/152, 0, sqrt(114)*I*c001/114 - sqrt(38)*c002/38 - sqrt(114)*I*c002/228 + sqrt(38)*c003/38 - sqrt(114)*I*c003/228 + sqrt(114)*s001/114 - sqrt(114)*s002/228 + sqrt(38)*I*s002/38 - sqrt(114)*s003/228 - sqrt(38)*I*s003/38, 0, 0, 0, 0], [sqrt(114)*c001/76 - sqrt(114)*c002/152 - 3*sqrt(38)*I*c002/152 - sqrt(114)*c003/152 + 3*sqrt(38)*I*c003/152 - sqrt(114)*I*s001/76 - 3*sqrt(38)*s002/152 + sqrt(114)*I*s002/152 + 3*sqrt(38)*s003/152 + sqrt(114)*I*s003/152, 0, sqrt(114)*I*c001/114 + sqrt(38)*c002/38 - sqrt(114)*I*c002/228 - sqrt(38)*c003/38 - sqrt(114)*I*c003/228 + sqrt(114)*s001/114 - sqrt(114)*s002/228 - sqrt(38)*I*s002/38 - sqrt(114)*s003/228 + sqrt(38)*I*s003/38, 0, 0, 0, 0, 0]]",
        "z_010": "[[0, 0, 0, 0, 0, -sqrt(3)*I*c001/12 - sqrt(3)*I*c002/12 - sqrt(3)*I*c003/12 + sqrt(3)*s001/12 + sqrt(3)*s002/12 + sqrt(3)*s003/12, 0, sqrt(3)*c001/12 + sqrt(3)*c002/12 + sqrt(3)*c003/12 + sqrt(3)*I*s001/12 + sqrt(3)*I*s002/12 + sqrt(3)*I*s003/12], [0, 0, 0, 0, -sqrt(3)*I*c001/12 - sqrt(3)*I*c002/12 - sqrt(3)*I*c003/12 + sqrt(3)*s001/12 + sqrt(3)*s002/12 + sqrt(3)*s003/12, 0, -sqrt(3)*c001/12 - sqrt(3)*c002/12 - sqrt(3)*c003/12 - sqrt(3)*I*s001/12 - sqrt(3)*I*s002/12 - sqrt(3)*I*s003/12, 0], [0, 0, 0, 0, 0, sqrt(3)*c001/12 + sqrt(3)*c002/12 + sqrt(3)*c003/12 + sqrt(3)*I*s001/12 + sqrt(3)*I*s002/12 + sqrt(3)*I*s003/12, 0, sqrt(3)*I*c001/12 + sqrt(3)*I*c002/12 + sqrt(3)*I*c003/12 - sqrt(3)*s001/12 - sqrt(3)*s002/12 - sqrt(3)*s003/12], [0, 0, 0, 0, -sqrt(3)*c001/12 - sqrt(3)*c002/12 - sqrt(3)*c003/12 - sqrt(3)*I*s001/12 - sqrt(3)*I*s002/12 - sqrt(3)*I*s003/12, 0, sqrt(3)*I*c001/12 + sqrt(3)*I*c002/12 + sqrt(3)*I*c003/12 - sqrt(3)*s001/12 - sqrt(3)*s002/12 - sqrt(3)*s003/12, 0], [0, sqrt(3)*I*c001/12 + sqrt(3)*I*c002/12 + sqrt(3)*I*c003/12 + sqrt(3)*s001/12 + sqrt(3)*s002/12 + sqrt(3)*s003/12, 0, -sqrt(3)*c001/12 - sqrt(3)*c002/12 - sqrt(3)*c003/12 + sqrt(3)*I*s001/12 + sqrt(3)*I*s002/12 + sqrt(3)*I*s003/12, 0, 0, 0, 0], [sqrt(3)*I*c001/12 + sqrt(3)*I*c002/12 + sqrt(3)*I*c003/12 + sqrt(3)*s001/12 + sqrt(3)*s002/12 + sqrt(3)*s003/12, 0, sqrt(3)*c001/12 + sqrt(3)*c002/12 + sqrt(3)*c003/12 - sqrt(3)*I*s001/12 - sqrt(3)*I*s002/12 - sqrt(3)*I*s003/12, 0, 0, 0, 0, 0], [0, -sqrt(3)*c001/12 - sqrt(3)*c002/12 - sqrt(3)*c003/12 + sqrt(3)*I*s001/12 + sqrt(3)*I*s002/12 + sqrt(3)*I*s003/12, 0, -sqrt(3)*I*c001/12 - sqrt(3)*I*c002/12 - sqrt(3)*I*c003/12 - sqrt(3)*s001/12 - sqrt(3)*s002/12 - sqrt(3)*s003/12, 0, 0, 0, 0], [sqrt(3)*c001/12 + sqrt(3)*c002/12 + sqrt(3)*c003/12 - sqrt(3)*I*s001/12 - sqrt(3)*I*s002/12 - sqrt(3)*I*s003/12, 0, -sqrt(3)*I*c001/12 - sqrt(3)*I*c002/12 - sqrt(3)*I*c003/12 - sqrt(3)*s001/12 - sqrt(3)*s002/12 - sqrt(3)*s003/12, 0, 0, 0, 0, 0]]",
        "z_011": "[[0, 0, 0, 0, -sqrt(2)*I*c002/8 + sqrt(2)*I*c003/8 + sqrt(2)*s002/8 - sqrt(2)*s003/8, 0, -sqrt(6)*I*c001/12 + sqrt(6)*I*c002/24 + sqrt(6)*I*c003/24 + sqrt(6)*s001/12 - sqrt(6)*s002/24 - sqrt(6)*s003/24, 0], [0, 0, 0, 0, 0, sqrt(2)*I*c002/8 - sqrt(2)*I*c003/8 - sqrt(2)*s002/8 + sqrt(2)*s003/8, 0, sqrt(6)*I*c001/12 - sqrt(6)*I*c002/24 - sqrt(6)*I*c003/24 - sqrt(6)*s001/12 + sqrt(6)*s002/24 + sqrt(6)*s003/24], [0, 0, 0, 0, -sqrt(6)*I*c001/12 + sqrt(6)*I*c002/24 + sqrt(6)*I*c003/24 + sqrt(6)*s001/12 - sqrt(6)*s002/24 - sqrt(6)*s003/24, 0, sqrt(2)*I*c002/8 - sqrt(2)*I*c003/8 - sqrt(2)*s002/8 + sqrt(2)*s003/8, 0], [0, 0, 0, 0, 0, sqrt(6)*I*c001/12 - sqrt(6)*I*c002/24 - sqrt(6)*I*c003/24 - sqrt(6)*s001/12 + sqrt(6)*s002/24 + sqrt(6)*s003/24, 0, -sqrt(2)*I*c002/8 + sqrt(2)*I*c003/8 + sqrt(2)*s002/8 - sqrt(2)*s003/8], [sqrt(2)*I*c002/8 - sqrt(2)*I*c003/8 + sqrt(2)*s002/8 - sqrt(2)*s003/8, 0, sqrt(6)*I*c001/12 - sqrt(6)*I*c002/24 - sqrt(6)*I*c003/24 + sqrt(6)*s001/12 - sqrt(6)*s002/24 - sqrt(6)*s003/24, 0, 0, 0, 0, 0], [0, -sqrt(2)*I*c002/8 + sqrt(2)*I*c003/8 - sqrt(2)*s002/8 + sqrt(2)*s003/8, 0, -sqrt(6)*I*c001/12 + sqrt(6)*I*c002/24 + sqrt(6)*I*c003/24 - sqrt(6)*s001/12 + sqrt(6)*s002/24 + sqrt(6)*s003/24, 0, 0, 0, 0], [sqrt(6)*I*c001/12 - sqrt(6)*I*c002/24 - sqrt(6)*I*c003/24 + sqrt(6)*s001/12 - sqrt(6)*s002/24 - sqrt(6)*s003/24, 0, -sqrt(2)*I*c002/8 + sqrt(2)*I*c003/8 - sqrt(2)*s002/8 + sqrt(2)*s003/8, 0, 0, 0, 0, 0], [0, -sqrt(6)*I*c001/12 + sqrt(6)*I*c002/24 + sqrt(6)*I*c003/24 - sqrt(6)*s001/12 + sqrt(6)*s002/24 + sqrt(6)*s003/24, 0, sqrt(2)*I*c002/8 - sqrt(2)*I*c003/8 + sqrt(2)*s002/8 - sqrt(2)*s003/8, 0, 0, 0, 0]]",
        "z_012": "[[0, 0, 0, 0, 0, 5*sqrt(57)*I*c001/228 + 7*sqrt(19)*c002/152 - 5*sqrt(57)*I*c002/456 - 7*sqrt(19)*c003/152 - 5*sqrt(57)*I*c003/456 - 5*sqrt(57)*s001/228 + 5*sqrt(57)*s002/456 + 7*sqrt(19)*I*s002/152 + 5*sqrt(57)*s003/456 - 7*sqrt(19)*I*s003/152, 0, -sqrt(57)*c001/228 + sqrt(57)*c002/456 - sqrt(19)*I*c002/152 + sqrt(57)*c003/456 + sqrt(19)*I*c003/152 - sqrt(57)*I*s001/228 + sqrt(19)*s002/152 + sqrt(57)*I*s002/456 - sqrt(19)*s003/152 + sqrt(57)*I*s003/456], [0, 0, 0, 0, 5*sqrt(57)*I*c001/228 - 7*sqrt(19)*c002/152 - 5*sqrt(57)*I*c002/456 + 7*sqrt(19)*c003/152 - 5*sqrt(57)*I*c003/456 - 5*sqrt(57)*s001/228 + 5*sqrt(57)*s002/456 - 7*sqrt(19)*I*s002/152 + 5*sqrt(57)*s003/456 + 7*sqrt(19)*I*s003/152, 0, sqrt(57)*c001/228 - sqrt(57)*c002/456 - sqrt(19)*I*c002/152 - sqrt(57)*c003/456 + sqrt(19)*I*c003/152 + sqrt(57)*I*s001/228 + sqrt(19)*s002/152 - sqrt(57)*I*s002/456 - sqrt(19)*s003/152 - sqrt(57)*I*s003/456, 0], [0, 0, 0, 0, 0, -sqrt(57)*c001/228 + sqrt(57)*c002/456 - sqrt(19)*I*c002/152 + sqrt(57)*c003/456 + sqrt(19)*I*c003/152 - sqrt(57)*I*s001/228 + sqrt(19)*s002/152 + sqrt(57)*I*s002/456 - sqrt(19)*s003/152 + sqrt(57)*I*s003/456, 0, 7*sqrt(57)*I*c001/228 + 5*sqrt(19)*c002/152 - 7*sqrt(57)*I*c002/456 - 5*sqrt(19)*c003/152 - 7*sqrt(57)*I*c003/456 - 7*sqrt(57)*s001/228 + 7*sqrt(57)*s002/456 + 5*sqrt(19)*I*s002/152 + 7*sqrt(57)*s003/456 - 5*sqrt(19)*I*s003/152], [0, 0, 0, 0, sqrt(57)*c001/228 - sqrt(57)*c002/456 - sqrt(19)*I*c002/152 - sqrt(57)*c003/456 + sqrt(19)*I*c003/152 + sqrt(57)*I*s001/228 + sqrt(19)*s002/152 - sqrt(57)*I*s002/456 - sqrt(19)*s003/152 - sqrt(57)*I*s003/456, 0, 7*sqrt(57)*I*c001/228 - 5*sqrt(19)*c002/152 - 7*sqrt(57)*I*c002/456 + 5*sqrt(19)*c003/152 - 7*sqrt(57)*I*c003/456 - 7*sqrt(57)*s001/228 + 7*sqrt(57)*s002/456 - 5*sqrt(19)*I*s002/152 + 7*sqrt(57)*s003/456 + 5*sqrt(19)*I*s003/152, 0], [0, -5*sqrt(57)*I*c001/228 - 7*sqrt(19)*c002/152 + 5*sqrt(57)*I*c002/456 + 7*sqrt(19)*c003/152 + 5*sqrt(57)*I*c003/456 - 5*sqrt(57)*s001/228 + 5*sqrt(57)*s002/456 + 7*sqrt(19)*I*s002/152 + 5*sqrt(57)*s003/456 - 7*sqrt(19)*I*s003/152, 0, sqrt(57)*c001/228 - sqrt(57)*c002/456 + sqrt(19)*I*c002/152 - sqrt(57)*c003/456 - sqrt(19)*I*c003/152 - sqrt(57)*I*s001/228 + sqrt(19)*s002/152 + sqrt(57)*I*s002/456 - sqrt(19)*s003/152 + sqrt(57)*I*s003/456, 0, 0, 0, 0], [-5*sqrt(57)*I*c001/228 + 7*sqrt(19)*c002/152 + 5*sqrt(57)*I*c002/456 - 7*sqrt(19)*c003/152 + 5*sqrt(57)*I*c003/456 - 5*sqrt(57)*s001/228 + 5*sqrt(57)*s002/456 - 7*sqrt(19)*I*s002/152 + 5*sqrt(57)*s003/456 + 7*sqrt(19)*I*s003/152, 0, -sqrt(57)*c001/228 + sqrt(57)*c002/456 + sqrt(19)*I*c002/152 + sqrt(57)*c003/456 - sqrt(19)*I*c003/152 + sqrt(57)*I*s001/228 + sqrt(19)*s002/152 - sqrt(57)*I*s002/456 - sqrt(19)*s003/152 - sqrt(57)*I*s003/456, 0, 0, 0, 0, 0], [0, sqrt(57)*c001/228 - sqrt(57)*c002/456 + sqrt(19)*I*c002/152 - sqrt(57)*c003/456 - sqrt(19)*I*c003/152 - sqrt(57)*I*s001/228 + sqrt(19)*s002/152 + sqrt(57)*I*s002/456 - sqrt(19)*s003/152 + sqrt(57)*I*s003/456, 0, -7*sqrt(57)*I*c001/228 - 5*sqrt(19)*c002/152 + 7*sqrt(57)*I*c002/456 + 5*sqrt(19)*c003/152 + 7*sqrt(57)*I*c003/456 - 7*sqrt(57)*s001/228 + 7*sqrt(57)*s002/456 + 5*sqrt(19)*I*s002/152 + 7*sqrt(57)*s003/456 - 5*sqrt(19)*I*s003/152, 0, 0, 0, 0], [-sqrt(57)*c001/228 + sqrt(57)*c002/456 + sqrt(19)*I*c002/152 + sqrt(57)*c003/456 - sqrt(19)*I*c003/152 + sqrt(57)*I*s001/228 + sqrt(19)*s002/152 - sqrt(57)*I*s002/456 - sqrt(19)*s003/152 - sqrt(57)*I*s003/456, 0, -7*sqrt(57)*I*c001/228 + 5*sqrt(19)*c002/152 + 7*sqrt(57)*I*c002/456 - 5*sqrt(19)*c003/152 + 7*sqrt(57)*I*c003/456 - 7*sqrt(57)*s001/228 + 7*sqrt(57)*s002/456 - 5*sqrt(19)*I*s002/152 + 7*sqrt(57)*s003/456 + 5*sqrt(19)*I*s003/152, 0, 0, 0, 0, 0]]",
    },
}
