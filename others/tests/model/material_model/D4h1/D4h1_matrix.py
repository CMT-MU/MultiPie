"""
== SAMB in full matrix form (* only for crystal) ===
- model : model name.
- molecule : molecule or crystal ?
- group : (tag, detailed str)
- dimension : dimension of full matrix
- ket : ket basis list, orbital@site
- version : MultiPie version
- k_point* : representative k points
- k_path* : high-symmetry line in k space
- A* : transform matrix, [a1,a2,a3]
- bond* : { "bond_#": "vector" }
- matrix : { "z_#": "matrix" }
"""
D4h1 = {
    "model": "D4h1",
    "molecule": False,
    "group": ("D4h^1", "space group No. 123 : D4h^1 / P4/mmm : PG D4h"),
    "dimension": 8,
    "ket": ["(s,U)@A_1", "(s,D)@A_1", "(px,U)@A_1", "(px,D)@A_1", "(py,U)@A_1", "(py,D)@A_1", "(pz,U)@A_1", "(pz,D)@A_1"],
    "version": "1.1.1",
    "k_point": {"Γ": "[0, 0, 0]", "X": "[1/2, 0, 0]"},
    "k_path": "Γ-X",
    "A": "[[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.5]]",
    "bond": {
        "bond_001": "[0, 1, 0]",
        "bond_002": "[1, 0, 0]",
        "bond_003": "[1, 1, 0]",
        "bond_004": "[1, -1, 0]",
        "bond_005": "[0, 0, 1]",
        "bond_006": "[0, 1, 1]",
        "bond_007": "[0, 1, -1]",
        "bond_008": "[1, 0, -1]",
        "bond_009": "[1, 0, 1]",
    },
    "matrix": {
        "z_001": "[[sqrt(2)/2, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(2)/2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_002": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)/6, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)/6, 0, 0, 0, 0], [0, 0, 0, 0, sqrt(6)/6, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(6)/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(6)/6, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)/6]]",
        "z_003": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(3)/6, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(3)/6, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)/6, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(3)/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(3)/3, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(3)/3]]",
        "z_004": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*I/6, 0, 0, sqrt(3)/6], [0, 0, 0, 0, 0, sqrt(3)*I/6, -sqrt(3)/6, 0], [0, 0, sqrt(3)*I/6, 0, 0, 0, 0, -sqrt(3)*I/6], [0, 0, 0, -sqrt(3)*I/6, 0, 0, -sqrt(3)*I/6, 0], [0, 0, 0, -sqrt(3)/6, 0, sqrt(3)*I/6, 0, 0], [0, 0, sqrt(3)/6, 0, sqrt(3)*I/6, 0, 0, 0]]",
        "z_005": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)*I/6, 0, 0, -sqrt(6)/12], [0, 0, 0, 0, 0, sqrt(6)*I/6, sqrt(6)/12, 0], [0, 0, sqrt(6)*I/6, 0, 0, 0, 0, sqrt(6)*I/12], [0, 0, 0, -sqrt(6)*I/6, 0, 0, sqrt(6)*I/12, 0], [0, 0, 0, sqrt(6)/12, 0, -sqrt(6)*I/12, 0, 0], [0, 0, -sqrt(6)/12, 0, -sqrt(6)*I/12, 0, 0, 0]]",
        "z_006": "[[sqrt(2)*c001/2 + sqrt(2)*c002/2, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(2)*c001/2 + sqrt(2)*c002/2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_007": "[[0, 0, s001/2, 0, -s002/2, 0, 0, s001/2 + I*s002/2], [0, 0, 0, -s001/2, 0, s002/2, s001/2 - I*s002/2, 0], [s001/2, 0, 0, 0, 0, 0, 0, 0], [0, -s001/2, 0, 0, 0, 0, 0, 0], [-s002/2, 0, 0, 0, 0, 0, 0, 0], [0, s002/2, 0, 0, 0, 0, 0, 0], [0, s001/2 + I*s002/2, 0, 0, 0, 0, 0, 0], [s001/2 - I*s002/2, 0, 0, 0, 0, 0, 0, 0]]",
        "z_008": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)*c001/6 + sqrt(6)*c002/6, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)*c001/6 + sqrt(6)*c002/6, 0, 0, 0, 0], [0, 0, 0, 0, sqrt(6)*c001/6 + sqrt(6)*c002/6, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(6)*c001/6 + sqrt(6)*c002/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(6)*c001/6 + sqrt(6)*c002/6, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)*c001/6 + sqrt(6)*c002/6]]",
        "z_009": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(3)*c001/6 - sqrt(3)*c002/6, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(3)*c001/6 - sqrt(3)*c002/6, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*c001/6 - sqrt(3)*c002/6, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(3)*c001/6 - sqrt(3)*c002/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(3)*c001/3 + sqrt(3)*c002/3, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(3)*c001/3 + sqrt(3)*c002/3]]",
        "z_010": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, c001/2 - c002/2, 0, 0, 0, 0, 0], [0, 0, 0, c001/2 - c002/2, 0, 0, 0, 0], [0, 0, 0, 0, -c001/2 + c002/2, 0, 0, 0], [0, 0, 0, 0, 0, -c001/2 + c002/2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_011": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*I*c001/6 - sqrt(3)*I*c002/6, 0, 0, sqrt(3)*c001/6 + sqrt(3)*c002/6], [0, 0, 0, 0, 0, sqrt(3)*I*c001/6 + sqrt(3)*I*c002/6, -sqrt(3)*c001/6 - sqrt(3)*c002/6, 0], [0, 0, sqrt(3)*I*c001/6 + sqrt(3)*I*c002/6, 0, 0, 0, 0, -sqrt(3)*I*c001/6 - sqrt(3)*I*c002/6], [0, 0, 0, -sqrt(3)*I*c001/6 - sqrt(3)*I*c002/6, 0, 0, -sqrt(3)*I*c001/6 - sqrt(3)*I*c002/6, 0], [0, 0, 0, -sqrt(3)*c001/6 - sqrt(3)*c002/6, 0, sqrt(3)*I*c001/6 + sqrt(3)*I*c002/6, 0, 0], [0, 0, sqrt(3)*c001/6 + sqrt(3)*c002/6, 0, sqrt(3)*I*c001/6 + sqrt(3)*I*c002/6, 0, 0, 0]]",
        "z_012": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)*I*c001/6 - sqrt(6)*I*c002/6, 0, 0, -sqrt(6)*c001/12 - sqrt(6)*c002/12], [0, 0, 0, 0, 0, sqrt(6)*I*c001/6 + sqrt(6)*I*c002/6, sqrt(6)*c001/12 + sqrt(6)*c002/12, 0], [0, 0, sqrt(6)*I*c001/6 + sqrt(6)*I*c002/6, 0, 0, 0, 0, sqrt(6)*I*c001/12 + sqrt(6)*I*c002/12], [0, 0, 0, -sqrt(6)*I*c001/6 - sqrt(6)*I*c002/6, 0, 0, sqrt(6)*I*c001/12 + sqrt(6)*I*c002/12, 0], [0, 0, 0, sqrt(6)*c001/12 + sqrt(6)*c002/12, 0, -sqrt(6)*I*c001/12 - sqrt(6)*I*c002/12, 0, 0], [0, 0, -sqrt(6)*c001/12 - sqrt(6)*c002/12, 0, -sqrt(6)*I*c001/12 - sqrt(6)*I*c002/12, 0, 0, 0]]",
        "z_013": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, -sqrt(2)*c001/4 + sqrt(2)*c002/4], [0, 0, 0, 0, 0, 0, sqrt(2)*c001/4 - sqrt(2)*c002/4, 0], [0, 0, 0, 0, 0, 0, 0, -sqrt(2)*I*c001/4 + sqrt(2)*I*c002/4], [0, 0, 0, 0, 0, 0, -sqrt(2)*I*c001/4 + sqrt(2)*I*c002/4, 0], [0, 0, 0, sqrt(2)*c001/4 - sqrt(2)*c002/4, 0, sqrt(2)*I*c001/4 - sqrt(2)*I*c002/4, 0, 0], [0, 0, -sqrt(2)*c001/4 + sqrt(2)*c002/4, 0, sqrt(2)*I*c001/4 - sqrt(2)*I*c002/4, 0, 0, 0]]",
        "z_014": "[[sqrt(2)*c003/2 + sqrt(2)*c004/2, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(2)*c003/2 + sqrt(2)*c004/2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_015": "[[0, 0, sqrt(2)*s003/4 - sqrt(2)*s004/4, 0, -sqrt(2)*s003/4 - sqrt(2)*s004/4, 0, 0, sqrt(2)*s003/4 + sqrt(2)*I*s003/4 - sqrt(2)*s004/4 + sqrt(2)*I*s004/4], [0, 0, 0, -sqrt(2)*s003/4 + sqrt(2)*s004/4, 0, sqrt(2)*s003/4 + sqrt(2)*s004/4, sqrt(2)*s003/4 - sqrt(2)*I*s003/4 - sqrt(2)*s004/4 - sqrt(2)*I*s004/4, 0], [sqrt(2)*s003/4 - sqrt(2)*s004/4, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(2)*s003/4 + sqrt(2)*s004/4, 0, 0, 0, 0, 0, 0], [-sqrt(2)*s003/4 - sqrt(2)*s004/4, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(2)*s003/4 + sqrt(2)*s004/4, 0, 0, 0, 0, 0, 0], [0, sqrt(2)*s003/4 + sqrt(2)*I*s003/4 - sqrt(2)*s004/4 + sqrt(2)*I*s004/4, 0, 0, 0, 0, 0, 0], [sqrt(2)*s003/4 - sqrt(2)*I*s003/4 - sqrt(2)*s004/4 - sqrt(2)*I*s004/4, 0, 0, 0, 0, 0, 0, 0]]",
        "z_016": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)*c003/6 + sqrt(6)*c004/6, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(6)*c003/6 + sqrt(6)*c004/6, 0, 0, 0, 0], [0, 0, 0, 0, sqrt(6)*c003/6 + sqrt(6)*c004/6, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(6)*c003/6 + sqrt(6)*c004/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(6)*c003/6 + sqrt(6)*c004/6, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)*c003/6 + sqrt(6)*c004/6]]",
        "z_017": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(3)*c003/6 - sqrt(3)*c004/6, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(3)*c003/6 - sqrt(3)*c004/6, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*c003/6 - sqrt(3)*c004/6, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(3)*c003/6 - sqrt(3)*c004/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(3)*c003/3 + sqrt(3)*c004/3, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(3)*c003/3 + sqrt(3)*c004/3]]",
        "z_018": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, c003/2 - c004/2, 0, 0, 0], [0, 0, 0, 0, 0, c003/2 - c004/2, 0, 0], [0, 0, c003/2 - c004/2, 0, 0, 0, 0, 0], [0, 0, 0, c003/2 - c004/2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_019": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*I*c003/6 - sqrt(3)*I*c004/6, 0, 0, sqrt(3)*c003/6 + sqrt(3)*c004/6], [0, 0, 0, 0, 0, sqrt(3)*I*c003/6 + sqrt(3)*I*c004/6, -sqrt(3)*c003/6 - sqrt(3)*c004/6, 0], [0, 0, sqrt(3)*I*c003/6 + sqrt(3)*I*c004/6, 0, 0, 0, 0, -sqrt(3)*I*c003/6 - sqrt(3)*I*c004/6], [0, 0, 0, -sqrt(3)*I*c003/6 - sqrt(3)*I*c004/6, 0, 0, -sqrt(3)*I*c003/6 - sqrt(3)*I*c004/6, 0], [0, 0, 0, -sqrt(3)*c003/6 - sqrt(3)*c004/6, 0, sqrt(3)*I*c003/6 + sqrt(3)*I*c004/6, 0, 0], [0, 0, sqrt(3)*c003/6 + sqrt(3)*c004/6, 0, sqrt(3)*I*c003/6 + sqrt(3)*I*c004/6, 0, 0, 0]]",
        "z_020": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)*I*c003/6 - sqrt(6)*I*c004/6, 0, 0, -sqrt(6)*c003/12 - sqrt(6)*c004/12], [0, 0, 0, 0, 0, sqrt(6)*I*c003/6 + sqrt(6)*I*c004/6, sqrt(6)*c003/12 + sqrt(6)*c004/12, 0], [0, 0, sqrt(6)*I*c003/6 + sqrt(6)*I*c004/6, 0, 0, 0, 0, sqrt(6)*I*c003/12 + sqrt(6)*I*c004/12], [0, 0, 0, -sqrt(6)*I*c003/6 - sqrt(6)*I*c004/6, 0, 0, sqrt(6)*I*c003/12 + sqrt(6)*I*c004/12, 0], [0, 0, 0, sqrt(6)*c003/12 + sqrt(6)*c004/12, 0, -sqrt(6)*I*c003/12 - sqrt(6)*I*c004/12, 0, 0], [0, 0, -sqrt(6)*c003/12 - sqrt(6)*c004/12, 0, -sqrt(6)*I*c003/12 - sqrt(6)*I*c004/12, 0, 0, 0]]",
        "z_021": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(2)*I*c003/4 - sqrt(2)*I*c004/4], [0, 0, 0, 0, 0, 0, sqrt(2)*I*c003/4 - sqrt(2)*I*c004/4, 0], [0, 0, 0, 0, 0, 0, 0, -sqrt(2)*c003/4 + sqrt(2)*c004/4], [0, 0, 0, 0, 0, 0, sqrt(2)*c003/4 - sqrt(2)*c004/4, 0], [0, 0, 0, -sqrt(2)*I*c003/4 + sqrt(2)*I*c004/4, 0, sqrt(2)*c003/4 - sqrt(2)*c004/4, 0, 0], [0, 0, -sqrt(2)*I*c003/4 + sqrt(2)*I*c004/4, 0, -sqrt(2)*c003/4 + sqrt(2)*c004/4, 0, 0, 0]]",
        "z_022": "[[c005, 0, 0, 0, 0, 0, 0, 0], [0, c005, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_023": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)*c005/3, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(3)*c005/3, 0, 0, 0, 0], [0, 0, 0, 0, sqrt(3)*c005/3, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(3)*c005/3, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(3)*c005/3, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(3)*c005/3]]",
        "z_024": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)*c005/6, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(6)*c005/6, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)*c005/6, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(6)*c005/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(6)*c005/3, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)*c005/3]]",
        "z_025": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)*I*c005/6, 0, 0, sqrt(6)*c005/6], [0, 0, 0, 0, 0, sqrt(6)*I*c005/6, -sqrt(6)*c005/6, 0], [0, 0, sqrt(6)*I*c005/6, 0, 0, 0, 0, -sqrt(6)*I*c005/6], [0, 0, 0, -sqrt(6)*I*c005/6, 0, 0, -sqrt(6)*I*c005/6, 0], [0, 0, 0, -sqrt(6)*c005/6, 0, sqrt(6)*I*c005/6, 0, 0], [0, 0, sqrt(6)*c005/6, 0, sqrt(6)*I*c005/6, 0, 0, 0]]",
        "z_026": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*I*c005/3, 0, 0, -sqrt(3)*c005/6], [0, 0, 0, 0, 0, sqrt(3)*I*c005/3, sqrt(3)*c005/6, 0], [0, 0, sqrt(3)*I*c005/3, 0, 0, 0, 0, sqrt(3)*I*c005/6], [0, 0, 0, -sqrt(3)*I*c005/3, 0, 0, sqrt(3)*I*c005/6, 0], [0, 0, 0, sqrt(3)*c005/6, 0, -sqrt(3)*I*c005/6, 0, 0], [0, 0, -sqrt(3)*c005/6, 0, -sqrt(3)*I*c005/6, 0, 0, 0]]",
        "z_027": "[[c006/2 + c007/2 + c008/2 + c009/2, 0, 0, 0, 0, 0, 0, 0], [0, c006/2 + c007/2 + c008/2 + c009/2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_028": "[[0, 0, sqrt(2)*s006/4 + sqrt(2)*s007/4, 0, -sqrt(2)*s008/4 - sqrt(2)*s009/4, 0, 0, sqrt(2)*s006/4 + sqrt(2)*s007/4 + sqrt(2)*I*s008/4 + sqrt(2)*I*s009/4], [0, 0, 0, -sqrt(2)*s006/4 - sqrt(2)*s007/4, 0, sqrt(2)*s008/4 + sqrt(2)*s009/4, sqrt(2)*s006/4 + sqrt(2)*s007/4 - sqrt(2)*I*s008/4 - sqrt(2)*I*s009/4, 0], [sqrt(2)*s006/4 + sqrt(2)*s007/4, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(2)*s006/4 - sqrt(2)*s007/4, 0, 0, 0, 0, 0, 0], [-sqrt(2)*s008/4 - sqrt(2)*s009/4, 0, 0, 0, 0, 0, 0, 0], [0, sqrt(2)*s008/4 + sqrt(2)*s009/4, 0, 0, 0, 0, 0, 0], [0, sqrt(2)*s006/4 + sqrt(2)*s007/4 + sqrt(2)*I*s008/4 + sqrt(2)*I*s009/4, 0, 0, 0, 0, 0, 0], [sqrt(2)*s006/4 + sqrt(2)*s007/4 - sqrt(2)*I*s008/4 - sqrt(2)*I*s009/4, 0, 0, 0, 0, 0, 0, 0]]",
        "z_029": "[[0, 0, 0, sqrt(2)*I*s006/4 - sqrt(2)*I*s007/4 + sqrt(2)*I*s008/4 - sqrt(2)*I*s009/4, 0, -sqrt(2)*s006/4 + sqrt(2)*s007/4 - sqrt(2)*s008/4 + sqrt(2)*s009/4, 0, 0], [0, 0, -sqrt(2)*I*s006/4 + sqrt(2)*I*s007/4 - sqrt(2)*I*s008/4 + sqrt(2)*I*s009/4, 0, -sqrt(2)*s006/4 + sqrt(2)*s007/4 - sqrt(2)*s008/4 + sqrt(2)*s009/4, 0, 0, 0], [0, sqrt(2)*I*s006/4 - sqrt(2)*I*s007/4 + sqrt(2)*I*s008/4 - sqrt(2)*I*s009/4, 0, 0, 0, 0, 0, 0], [-sqrt(2)*I*s006/4 + sqrt(2)*I*s007/4 - sqrt(2)*I*s008/4 + sqrt(2)*I*s009/4, 0, 0, 0, 0, 0, 0, 0], [0, -sqrt(2)*s006/4 + sqrt(2)*s007/4 - sqrt(2)*s008/4 + sqrt(2)*s009/4, 0, 0, 0, 0, 0, 0], [-sqrt(2)*s006/4 + sqrt(2)*s007/4 - sqrt(2)*s008/4 + sqrt(2)*s009/4, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]]",
        "z_030": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, 0, 0, 0, 0], [0, 0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, 0, 0, 0], [0, 0, 0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, 0, 0], [0, 0, 0, 0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6]]",
        "z_031": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0, 0, 0, 0, 0], [0, 0, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0, 0], [0, 0, 0, 0, 0, 0, sqrt(6)*c006/6 + sqrt(6)*c007/6 + sqrt(6)*c008/6 + sqrt(6)*c009/6, 0], [0, 0, 0, 0, 0, 0, 0, sqrt(6)*c006/6 + sqrt(6)*c007/6 + sqrt(6)*c008/6 + sqrt(6)*c009/6]]",
        "z_032": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, sqrt(6)*c006/12 + sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0, 0, 0, -sqrt(3)*c008/6 + sqrt(3)*c009/6, 0], [0, 0, 0, sqrt(6)*c006/12 + sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0, 0, 0, -sqrt(3)*c008/6 + sqrt(3)*c009/6], [0, 0, 0, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 + sqrt(6)*c008/12 + sqrt(6)*c009/12, 0, sqrt(3)*c006/6 - sqrt(3)*c007/6, 0], [0, 0, 0, 0, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 + sqrt(6)*c008/12 + sqrt(6)*c009/12, 0, sqrt(3)*c006/6 - sqrt(3)*c007/6], [0, 0, -sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, sqrt(3)*c006/6 - sqrt(3)*c007/6, 0, 0, 0], [0, 0, 0, -sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, sqrt(3)*c006/6 - sqrt(3)*c007/6, 0, 0]]",
        "z_033": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, -sqrt(3)*c006/6 - sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, 0, 0, -sqrt(6)*c008/12 + sqrt(6)*c009/12, 0], [0, 0, 0, -sqrt(3)*c006/6 - sqrt(3)*c007/6 + sqrt(3)*c008/6 + sqrt(3)*c009/6, 0, 0, 0, -sqrt(6)*c008/12 + sqrt(6)*c009/12], [0, 0, 0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 - sqrt(3)*c008/6 - sqrt(3)*c009/6, 0, sqrt(6)*c006/12 - sqrt(6)*c007/12, 0], [0, 0, 0, 0, 0, sqrt(3)*c006/6 + sqrt(3)*c007/6 - sqrt(3)*c008/6 - sqrt(3)*c009/6, 0, sqrt(6)*c006/12 - sqrt(6)*c007/12], [0, 0, -sqrt(6)*c008/12 + sqrt(6)*c009/12, 0, sqrt(6)*c006/12 - sqrt(6)*c007/12, 0, 0, 0], [0, 0, 0, -sqrt(6)*c008/12 + sqrt(6)*c009/12, 0, sqrt(6)*c006/12 - sqrt(6)*c007/12, 0, 0]]",
        "z_034": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12 - sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, 0, 0, sqrt(6)*c006/12 + sqrt(6)*c007/12 + sqrt(6)*c008/12 + sqrt(6)*c009/12], [0, 0, 0, 0, 0, sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12 + sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, -sqrt(6)*c006/12 - sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0], [0, 0, sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12 + sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, 0, 0, 0, 0, -sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12 - sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12], [0, 0, 0, -sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12 - sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, 0, 0, -sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12 - sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, 0], [0, 0, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, 0, sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12 + sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, 0, 0], [0, 0, sqrt(6)*c006/12 + sqrt(6)*c007/12 + sqrt(6)*c008/12 + sqrt(6)*c009/12, 0, sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12 + sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, 0, 0, 0]]",
        "z_035": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, -sqrt(3)*I*c006/6 - sqrt(3)*I*c007/6 - sqrt(3)*I*c008/6 - sqrt(3)*I*c009/6, 0, 0, -sqrt(3)*c006/12 - sqrt(3)*c007/12 - sqrt(3)*c008/12 - sqrt(3)*c009/12], [0, 0, 0, 0, 0, sqrt(3)*I*c006/6 + sqrt(3)*I*c007/6 + sqrt(3)*I*c008/6 + sqrt(3)*I*c009/6, sqrt(3)*c006/12 + sqrt(3)*c007/12 + sqrt(3)*c008/12 + sqrt(3)*c009/12, 0], [0, 0, sqrt(3)*I*c006/6 + sqrt(3)*I*c007/6 + sqrt(3)*I*c008/6 + sqrt(3)*I*c009/6, 0, 0, 0, 0, sqrt(3)*I*c006/12 + sqrt(3)*I*c007/12 + sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12], [0, 0, 0, -sqrt(3)*I*c006/6 - sqrt(3)*I*c007/6 - sqrt(3)*I*c008/6 - sqrt(3)*I*c009/6, 0, 0, sqrt(3)*I*c006/12 + sqrt(3)*I*c007/12 + sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12, 0], [0, 0, 0, sqrt(3)*c006/12 + sqrt(3)*c007/12 + sqrt(3)*c008/12 + sqrt(3)*c009/12, 0, -sqrt(3)*I*c006/12 - sqrt(3)*I*c007/12 - sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, 0, 0], [0, 0, -sqrt(3)*c006/12 - sqrt(3)*c007/12 - sqrt(3)*c008/12 - sqrt(3)*c009/12, 0, -sqrt(3)*I*c006/12 - sqrt(3)*I*c007/12 - sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, 0, 0, 0]]",
        "z_036": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(6)*c006/12 + sqrt(6)*c007/12 + sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12, -sqrt(3)*c006/12 - sqrt(3)*c007/12 + sqrt(3)*c008/12 + sqrt(3)*c009/12], [0, 0, 0, 0, sqrt(6)*c006/12 - sqrt(6)*c007/12 + sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, 0, sqrt(3)*c006/12 + sqrt(3)*c007/12 - sqrt(3)*c008/12 - sqrt(3)*c009/12, -sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12], [0, 0, 0, sqrt(6)*c006/12 - sqrt(6)*c007/12 - sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, 0, 0, sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, -sqrt(3)*I*c006/12 - sqrt(3)*I*c007/12 + sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12], [0, 0, -sqrt(6)*c006/12 + sqrt(6)*c007/12 - sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, 0, 0, 0, -sqrt(3)*I*c006/12 - sqrt(3)*I*c007/12 + sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12, -sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12], [0, 0, -sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12, sqrt(3)*c006/12 + sqrt(3)*c007/12 - sqrt(3)*c008/12 - sqrt(3)*c009/12, -sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, sqrt(3)*I*c006/12 + sqrt(3)*I*c007/12 - sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, 0, 0], [0, 0, -sqrt(3)*c006/12 - sqrt(3)*c007/12 + sqrt(3)*c008/12 + sqrt(3)*c009/12, sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12, sqrt(3)*I*c006/12 + sqrt(3)*I*c007/12 - sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, 0, 0]]",
        "z_037": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, -sqrt(3)*c006/12 + sqrt(3)*c007/12 + sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, sqrt(3)*I*c006/12 - sqrt(3)*I*c007/12, sqrt(6)*c006/12 + sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12], [0, 0, 0, 0, sqrt(3)*c006/12 - sqrt(3)*c007/12 + sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, 0, -sqrt(6)*c006/12 - sqrt(6)*c007/12 + sqrt(6)*c008/12 + sqrt(6)*c009/12, -sqrt(3)*I*c006/12 + sqrt(3)*I*c007/12], [0, 0, 0, sqrt(3)*c006/12 - sqrt(3)*c007/12 - sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12, 0, 0, sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12 - sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12], [0, 0, -sqrt(3)*c006/12 + sqrt(3)*c007/12 - sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12, 0, 0, 0, sqrt(6)*I*c006/12 + sqrt(6)*I*c007/12 - sqrt(6)*I*c008/12 - sqrt(6)*I*c009/12, -sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12], [0, 0, -sqrt(3)*I*c006/12 + sqrt(3)*I*c007/12, -sqrt(6)*c006/12 - sqrt(6)*c007/12 + sqrt(6)*c008/12 + sqrt(6)*c009/12, -sqrt(3)*I*c008/12 + sqrt(3)*I*c009/12, -sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12 + sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, 0, 0], [0, 0, sqrt(6)*c006/12 + sqrt(6)*c007/12 - sqrt(6)*c008/12 - sqrt(6)*c009/12, sqrt(3)*I*c006/12 - sqrt(3)*I*c007/12, -sqrt(6)*I*c006/12 - sqrt(6)*I*c007/12 + sqrt(6)*I*c008/12 + sqrt(6)*I*c009/12, sqrt(3)*I*c008/12 - sqrt(3)*I*c009/12, 0, 0]]",
        "z_038": "[[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, -c006/4 + c007/4 + I*c008/4 - I*c009/4, -I*c006/4 + I*c007/4, 0], [0, 0, 0, 0, c006/4 - c007/4 + I*c008/4 - I*c009/4, 0, 0, I*c006/4 - I*c007/4], [0, 0, 0, c006/4 - c007/4 - I*c008/4 + I*c009/4, 0, 0, -I*c008/4 + I*c009/4, 0], [0, 0, -c006/4 + c007/4 - I*c008/4 + I*c009/4, 0, 0, 0, 0, I*c008/4 - I*c009/4], [0, 0, I*c006/4 - I*c007/4, 0, I*c008/4 - I*c009/4, 0, 0, 0], [0, 0, 0, -I*c006/4 + I*c007/4, 0, -I*c008/4 + I*c009/4, 0, 0]]",
    },
}
